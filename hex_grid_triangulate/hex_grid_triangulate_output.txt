May 18 2007   7:50:48.444 AM
 
HEX_GRID_TRIANGULATE
  FORTRAN90 version
  Find hex grid nodes inside a test triangulation region.
 
TEST01
  Given an unknown triangulation region,
  get its bounding box, compute parameters
  for a hexagonal grid with horizontal count 
  NODES_PER_LAYER =     40
  generate the full grid,
  count those grid points that are in the region,
  and write the grid points to a file.
 
  Coordinate box:
   -1.0000 <= X <=   1.0000
   -1.0000 <= Y <=   1.0000
      40   46    1377    p_1_40_46_1377.txt
 
TEST01
  Given an unknown triangulation region,
  get its bounding box, compute parameters
  for a hexagonal grid with horizontal count 
  NODES_PER_LAYER =     40
  generate the full grid,
  count those grid points that are in the region,
  and write the grid points to a file.
 
  Coordinate box:
   -1.0000 <= X <=   1.0000
   -1.0000 <= Y <=   1.0000
      40   46    1156    p_2_40_46_1156.txt
 
TEST01
  Given an unknown triangulation region,
  get its bounding box, compute parameters
  for a hexagonal grid with horizontal count 
  NODES_PER_LAYER =     40
  generate the full grid,
  count those grid points that are in the region,
  and write the grid points to a file.
 
  Coordinate box:
   -1.0000 <= X <=   1.0000
   -1.0000 <= Y <=   1.0000
      40   46    1596    p_3_40_46_1596.txt
 
TEST01
  Given an unknown triangulation region,
  get its bounding box, compute parameters
  for a hexagonal grid with horizontal count 
  NODES_PER_LAYER =     40
  generate the full grid,
  count those grid points that are in the region,
  and write the grid points to a file.
 
  Coordinate box:
   -1.0000 <= X <=   1.0000
   -0.8660 <= Y <=   0.8660
      40   40     857    p_4_40_40_857.txt
 
TEST01
  Given an unknown triangulation region,
  get its bounding box, compute parameters
  for a hexagonal grid with horizontal count 
  NODES_PER_LAYER =     40
  generate the full grid,
  count those grid points that are in the region,
  and write the grid points to a file.
 
  Coordinate box:
   -1.0000 <= X <=   1.0000
    0.0000 <= Y <=   1.0000
      40   23     489    p_5_40_23_489.txt
 
TEST01
  Given an unknown triangulation region,
  get its bounding box, compute parameters
  for a hexagonal grid with horizontal count 
  NODES_PER_LAYER =     40
  generate the full grid,
  count those grid points that are in the region,
  and write the grid points to a file.
 
  Coordinate box:
   -1.0000 <= X <=   1.0000
   -1.0000 <= Y <=   1.0000
      40   46    1212    p_6_40_46_1212.txt
 
TEST01
  Given an unknown triangulation region,
  get its bounding box, compute parameters
  for a hexagonal grid with horizontal count 
  NODES_PER_LAYER =     40
  generate the full grid,
  count those grid points that are in the region,
  and write the grid points to a file.
 
  Coordinate box:
   -7.8540 <= X <=   7.8540
   -5.0000 <= Y <=   1.0000
      40   18     459    p_7_40_18_459.txt
 
TEST01
  Given an unknown triangulation region,
  get its bounding box, compute parameters
  for a hexagonal grid with horizontal count 
  NODES_PER_LAYER =     40
  generate the full grid,
  count those grid points that are in the region,
  and write the grid points to a file.
 
  Coordinate box:
    0.0000 <= X <=   1.0000
   -0.2588 <= Y <=   0.2588
      40   24     388    p_8_40_24_388.txt
 
TEST01
  Given an unknown triangulation region,
  get its bounding box, compute parameters
  for a hexagonal grid with horizontal count 
  NODES_PER_LAYER =     40
  generate the full grid,
  count those grid points that are in the region,
  and write the grid points to a file.
 
  Coordinate box:
    0.0000 <= X <=   1.0000
    0.0000 <= Y <=   1.0000
      40   46    1725    p_9_40_46_1725.txt
 
TEST01
  Given an unknown triangulation region,
  get its bounding box, compute parameters
  for a hexagonal grid with horizontal count 
  NODES_PER_LAYER =     40
  generate the full grid,
  count those grid points that are in the region,
  and write the grid points to a file.
 
  Coordinate box:
    0.0000 <= X <=   1.0000
    0.0000 <= Y <=   1.0000
      40   46    1817    p_10_40_46_1817.txt
 
TEST01
  Given an unknown triangulation region,
  get its bounding box, compute parameters
  for a hexagonal grid with horizontal count 
  NODES_PER_LAYER =     40
  generate the full grid,
  count those grid points that are in the region,
  and write the grid points to a file.
 
  Coordinate box:
    0.0000 <= X <=   1.0000
    0.0000 <= Y <=   1.0000
      40   46    1369    p_11_40_46_1369.txt
 
TEST01
  Given an unknown triangulation region,
  get its bounding box, compute parameters
  for a hexagonal grid with horizontal count 
  NODES_PER_LAYER =     40
  generate the full grid,
  count those grid points that are in the region,
  and write the grid points to a file.
 
  Coordinate box:
    0.0000 <= X <=   1.0000
    0.0000 <= Y <=   1.0000
      40   46    1633    p_12_40_46_1633.txt
 
TEST01
  Given an unknown triangulation region,
  get its bounding box, compute parameters
  for a hexagonal grid with horizontal count 
  NODES_PER_LAYER =     40
  generate the full grid,
  count those grid points that are in the region,
  and write the grid points to a file.
 
  Coordinate box:
    0.0000 <= X <= 100.0000
    0.0000 <= Y <= 100.0000
      40   46     279    p_13_40_46_279.txt
 
TEST01
  Given an unknown triangulation region,
  get its bounding box, compute parameters
  for a hexagonal grid with horizontal count 
  NODES_PER_LAYER =     40
  generate the full grid,
  count those grid points that are in the region,
  and write the grid points to a file.
 
  Coordinate box:
  100.0000 <= X <= 634.0000
  145.0000 <= Y <= 799.0000
      40   56     769    p_14_40_56_769.txt
 
TEST01
  Given an unknown triangulation region,
  get its bounding box, compute parameters
  for a hexagonal grid with horizontal count 
  NODES_PER_LAYER =     40
  generate the full grid,
  count those grid points that are in the region,
  and write the grid points to a file.
 
  Coordinate box:
   -8.0000 <= X <=   8.0000
   -1.0000 <= Y <=   1.0000
      40    6     147    p_15_40_6_147.txt
 
TEST02
  Given an unknown triangulation region,
  get its bounding box, and try to find
  the appropriate value of NODES_PER_LAYER
  so that we get about N =    350 nodes.
 
  Coordinate box:
   -1.0000 <= X <=   1.0000
   -1.0000 <= Y <=   1.0000
      20   22     313    p_1_20_22_313.txt
 
TEST02
  Given an unknown triangulation region,
  get its bounding box, and try to find
  the appropriate value of NODES_PER_LAYER
  so that we get about N =    350 nodes.
 
  Coordinate box:
   -1.0000 <= X <=   1.0000
   -1.0000 <= Y <=   1.0000
      22   25     332    p_2_22_25_332.txt
 
TEST02
  Given an unknown triangulation region,
  get its bounding box, and try to find
  the appropriate value of NODES_PER_LAYER
  so that we get about N =    350 nodes.
 
  Coordinate box:
   -1.0000 <= X <=   1.0000
   -1.0000 <= Y <=   1.0000
      19   22     374    p_3_19_22_374.txt
 
TEST02
  Given an unknown triangulation region,
  get its bounding box, and try to find
  the appropriate value of NODES_PER_LAYER
  so that we get about N =    350 nodes.
 
  Coordinate box:
   -1.0000 <= X <=   1.0000
   -0.8660 <= Y <=   0.8660
      25   25     336    p_4_25_25_336.txt
 
TEST02
  Given an unknown triangulation region,
  get its bounding box, and try to find
  the appropriate value of NODES_PER_LAYER
  so that we get about N =    350 nodes.
 
  Coordinate box:
   -1.0000 <= X <=   1.0000
    0.0000 <= Y <=   1.0000
      33   19     332    p_5_33_19_332.txt
 
TEST02
  Given an unknown triangulation region,
  get its bounding box, and try to find
  the appropriate value of NODES_PER_LAYER
  so that we get about N =    350 nodes.
 
  Coordinate box:
   -1.0000 <= X <=   1.0000
   -1.0000 <= Y <=   1.0000
      22   25     348    p_6_22_25_348.txt
 
TEST02
  Given an unknown triangulation region,
  get its bounding box, and try to find
  the appropriate value of NODES_PER_LAYER
  so that we get about N =    350 nodes.
 
  Coordinate box:
   -7.8540 <= X <=   7.8540
   -5.0000 <= Y <=   1.0000
      35   16     366    p_7_35_16_366.txt
 
TEST02
  Given an unknown triangulation region,
  get its bounding box, and try to find
  the appropriate value of NODES_PER_LAYER
  so that we get about N =    350 nodes.
 
  Coordinate box:
    0.0000 <= X <=   1.0000
   -0.2588 <= Y <=   0.2588
      38   23     350    p_8_38_23_350.txt
 
TEST02
  Given an unknown triangulation region,
  get its bounding box, and try to find
  the appropriate value of NODES_PER_LAYER
  so that we get about N =    350 nodes.
 
  Coordinate box:
    0.0000 <= X <=   1.0000
    0.0000 <= Y <=   1.0000
      18   21     367    p_9_18_21_367.txt
 
TEST02
  Given an unknown triangulation region,
  get its bounding box, and try to find
  the appropriate value of NODES_PER_LAYER
  so that we get about N =    350 nodes.
 
  Coordinate box:
    0.0000 <= X <=   1.0000
    0.0000 <= Y <=   1.0000
      18   20     350    p_10_18_20_350.txt
 
TEST02
  Given an unknown triangulation region,
  get its bounding box, and try to find
  the appropriate value of NODES_PER_LAYER
  so that we get about N =    350 nodes.
 
  Coordinate box:
    0.0000 <= X <=   1.0000
    0.0000 <= Y <=   1.0000
      20   22     325    p_11_20_22_325.txt
 
TEST02
  Given an unknown triangulation region,
  get its bounding box, and try to find
  the appropriate value of NODES_PER_LAYER
  so that we get about N =    350 nodes.
 
  Coordinate box:
    0.0000 <= X <=   1.0000
    0.0000 <= Y <=   1.0000
      18   21     351    p_12_18_21_351.txt
 
TEST02
  Given an unknown triangulation region,
  get its bounding box, and try to find
  the appropriate value of NODES_PER_LAYER
  so that we get about N =    350 nodes.
 
  Coordinate box:
    0.0000 <= X <= 100.0000
    0.0000 <= Y <= 100.0000
      43   50     353    p_13_43_50_353.txt
 
TEST02
  Given an unknown triangulation region,
  get its bounding box, and try to find
  the appropriate value of NODES_PER_LAYER
  so that we get about N =    350 nodes.
 
  Coordinate box:
  100.0000 <= X <= 634.0000
  145.0000 <= Y <= 799.0000
      27   39     366    p_14_27_39_366.txt
 
TEST02
  Given an unknown triangulation region,
  get its bounding box, and try to find
  the appropriate value of NODES_PER_LAYER
  so that we get about N =    350 nodes.
 
  Coordinate box:
   -8.0000 <= X <=   8.0000
   -1.0000 <= Y <=   1.0000
      62    9     351    p_15_62_9_351.txt
 
HEX_GRID_TRiANGULATE
  Normal end of execution.
 
May 18 2007   7:50:49.944 AM
