23 June 2009   4:55:11.211 PM
 
LINPLUS_PRB
  FORTRAN90 version:
 
  Test the routines in the LINPLUS library.
 
TEST01
  C83_CR_FA factors a complex tridiagonal matrix;
  C83_CR_SLS solves 1 or more factored systems.
 
  Matrix order N =       10
 
 
  Solution:
 
  Col:          1          
  Row
  ---
    1   1.00      10.0    
    2   2.00      20.0    
    3   3.00      30.0    
    4   4.00      40.0    
    5   5.00      50.0    
    6   6.00      60.0    
    7   7.00      70.0    
    8   8.00      80.0    
    9   9.00      90.0    
   10   10.0      100.    
 
 
TEST014
  For a complex tridiagonal matrix that can be
    factored with no pivoting,
  C83_NP_FA factors;
  C83_NP_SL solves a factored system.
  C83_NP_ML multiplies A*X when A has been factored.
 
  Matrix order N =       10
 
  The tridiagonal matrix
 
  Col:         1           1           2           2           3           3    
  Row
  ---
    1  0.30636     0.26275E-01 0.24909     0.57874                            
    2  0.44986    -0.12667     0.50080    -0.77993    -0.50839     0.56206    
    3                         -0.84320    -0.34428     0.35047     0.16555E-01
    4                                                  0.58963     0.26009    
 
  Col:         4           4           5           5           6           6    
  Row
  ---
    3 -0.50657     0.60050                                                    
    4  0.43499    -0.26662    -0.10216    -0.44999                            
    5  0.39114     0.32340    -0.20095     0.27071    -0.10464     0.32674    
    6                         -0.13947    -0.15614    -0.97460E-01 0.90188    
    7                                                 -0.23607     0.77459E-01
 
  Col:         7           7           8           8           9           9    
  Row
  ---
    6  0.41063    -0.81018                                                    
    7 -0.77024    -0.31431    -0.60672E-01-0.24121                            
    8  0.18599E-01-0.63321    -0.88918     0.26566     0.51993E-01-0.29254    
    9                          0.89285     0.10314E-01-0.77987    -0.55116    
   10                                                 -0.56047     0.76380    
 
  Col:        10          10    
  Row
  ---
    9 -0.31111     0.80530    
   10  0.31360E-01-0.43356    
 
 
  The right hand side
 
       1   3.47667       11.8337    
       2   18.8607      -14.8029    
       3  -19.7483       26.1456    
       4  -21.3440       24.1115    
       5   11.5822      -23.8848    
       6  -78.6323      -20.0172    
       7   118.490      -39.9184    
       8  -4.79867       5.50455    
       9  -15.5794      -121.738    
      10  -31.6080      -21.9519    
 
  The solution
 
       1   1.00000       10.0000    
       2   2.00000       20.0000    
       3   3.00000       30.0000    
       4   4.00000       40.0000    
       5   5.00000       50.0000    
       6   6.00000       60.0000    
       7   7.00000       70.0000    
       8   8.00000       80.0000    
       9   9.00000       90.0000    
      10   10.0000       100.000    
 
  The second right hand side
 
       1   12.2878      -1.06452    
       2  -10.7750      -21.4185    
       3   21.7173       24.5346    
       4   19.4075       25.6959    
       5  -21.1183      -16.0825    
       6  -35.1915       73.1114    
       7  -15.6646      -124.048    
       8   4.44532       5.79366    
       9  -122.413      -8.83572    
      10  -27.7762       26.6352    
 
  The second solution
 
       1   10.0000       1.00000    
       2   20.0000       2.00000    
       3   30.0000       3.00000    
       4   40.0000       4.00000    
       5   50.0000       5.00000    
       6   60.0000       6.00000    
       7   70.0000       7.00000    
       8   80.0000       8.00000    
       9   90.0000       9.00000    
      10   100.000       10.0000    
 
TEST015
  For a complex tridiagonal matrix that can be
    factored with no pivoting,
  C83_NP_FA factors;
  C83_NP_SL solves a factored system.
  C83_NP_ML multiplies A*X when A has been factored.
 
  We will look at the TRANSPOSED linear system.
 
  Matrix order N =       10
 
  The tridiagonal matrix
 
  Col:         1           1           2           2           3           3    
  Row
  ---
    1  0.30636     0.26275E-01 0.24909     0.57874                            
    2  0.44986    -0.12667     0.50080    -0.77993    -0.50839     0.56206    
    3                         -0.84320    -0.34428     0.35047     0.16555E-01
    4                                                  0.58963     0.26009    
 
  Col:         4           4           5           5           6           6    
  Row
  ---
    3 -0.50657     0.60050                                                    
    4  0.43499    -0.26662    -0.10216    -0.44999                            
    5  0.39114     0.32340    -0.20095     0.27071    -0.10464     0.32674    
    6                         -0.13947    -0.15614    -0.97460E-01 0.90188    
    7                                                 -0.23607     0.77459E-01
 
  Col:         7           7           8           8           9           9    
  Row
  ---
    6  0.41063    -0.81018                                                    
    7 -0.77024    -0.31431    -0.60672E-01-0.24121                            
    8  0.18599E-01-0.63321    -0.88918     0.26566     0.51993E-01-0.29254    
    9                          0.89285     0.10314E-01-0.77987    -0.55116    
   10                                                 -0.56047     0.76380    
 
  Col:        10          10    
  Row
  ---
    9 -0.31111     0.80530    
   10  0.31360E-01-0.43356    
 
 
  The right hand side B1
 
       1  -11.0331       9.22911    
       2 -0.701468E-01 -0.737258    
       3  -20.2921      -24.8494    
       4   28.3599       27.4444    
       5  -46.1438       3.92724    
       6   11.9986       14.8825    
       7   29.3570      -76.5999    
       8   42.8859      -70.0933    
       9  -34.7381      -26.6965    
      10  -30.1165      -44.7672    
 
  The solution to At * X1 = B1
 
       1   1.00000       10.0000    
       2   2.00000       20.0000    
       3   3.00000       30.0000    
       4   4.00000       40.0000    
       5   5.00000       50.0000    
       6   6.00000       60.0000    
       7   7.00000       70.0000    
       8   8.00000       80.0000    
       9   9.00000       90.0000    
      10   10.0000       100.000    
 
  The second right hand side B2
 
       1   6.86159       12.6421    
       2 -0.736549     -0.772339E-01
       3  -28.3756       14.9696    
       4   32.5167      -22.3638    
       5  -5.28790       46.0077    
       6   16.9638      -8.81402    
       7  -69.2698      -43.9440    
       8  -60.2131      -55.9166    
       9  -33.0467       28.7638    
      10  -49.8444       20.6553    
 
  Solution to At * X2 = B2
 
       1   10.0000       1.00000    
       2   20.0000       2.00000    
       3   30.0000       3.00000    
       4   40.0000       4.00000    
       5   50.0000       5.00000    
       6   60.0000       6.00000    
       7   70.0000       7.00000    
       8   80.0000       8.00000    
       9   90.0000       9.00000    
      10   100.000       10.0000    
 
TEST016
  C8CI_SL solves a complex circulant system.
 
  Matrix order N =       10
 
  The circulant matrix:
 
  Col:          1                   2                   3                   4          
  Row
  ---
    1  0.450    -0.127    -0.843    -0.344     0.590     0.260     0.391     0.323    
    2  0.306     0.263E-01 0.450    -0.127    -0.843    -0.344     0.590     0.260    
    3 -0.560     0.764     0.306     0.263E-01 0.450    -0.127    -0.843    -0.344    
    4  0.893     0.103E-01-0.560     0.764     0.306     0.263E-01 0.450    -0.127    
    5  0.186E-01-0.633     0.893     0.103E-01-0.560     0.764     0.306     0.263E-01
    6 -0.236     0.775E-01 0.186E-01-0.633     0.893     0.103E-01-0.560     0.764    
    7 -0.139    -0.156    -0.236     0.775E-01 0.186E-01-0.633     0.893     0.103E-01
    8  0.391     0.323    -0.139    -0.156    -0.236     0.775E-01 0.186E-01-0.633    
    9  0.590     0.260     0.391     0.323    -0.139    -0.156    -0.236     0.775E-01
   10 -0.843    -0.344     0.590     0.260     0.391     0.323    -0.139    -0.156    
 
  Col:          5                   6                   7                   8          
  Row
  ---
    1 -0.139    -0.156    -0.236     0.775E-01 0.186E-01-0.633     0.893     0.103E-01
    2  0.391     0.323    -0.139    -0.156    -0.236     0.775E-01 0.186E-01-0.633    
    3  0.590     0.260     0.391     0.323    -0.139    -0.156    -0.236     0.775E-01
    4 -0.843    -0.344     0.590     0.260     0.391     0.323    -0.139    -0.156    
    5  0.450    -0.127    -0.843    -0.344     0.590     0.260     0.391     0.323    
    6  0.306     0.263E-01 0.450    -0.127    -0.843    -0.344     0.590     0.260    
    7 -0.560     0.764     0.306     0.263E-01 0.450    -0.127    -0.843    -0.344    
    8  0.893     0.103E-01-0.560     0.764     0.306     0.263E-01 0.450    -0.127    
    9  0.186E-01-0.633     0.893     0.103E-01-0.560     0.764     0.306     0.263E-01
   10 -0.236     0.775E-01 0.186E-01-0.633     0.893     0.103E-01-0.560     0.764    
 
  Col:          9                  10          
  Row
  ---
    1 -0.560     0.764     0.306     0.263E-01
    2  0.893     0.103E-01-0.560     0.764    
    3  0.186E-01-0.633     0.893     0.103E-01
    4 -0.236     0.775E-01 0.186E-01-0.633    
    5 -0.139    -0.156    -0.236     0.775E-01
    6  0.391     0.323    -0.139    -0.156    
    7  0.590     0.260     0.391     0.323    
    8 -0.843    -0.344     0.590     0.260    
    9  0.450    -0.127    -0.843    -0.344    
   10  0.306     0.263E-01 0.450    -0.127    
 
 
  Solution:
 
       1   1.00000       10.0000    
       2   2.00000       20.0000    
       3   3.00000       30.0000    
       4   4.00000       40.0000    
       5   5.00000       50.0000    
       6   6.00000       60.0000    
       7   7.00000       70.0000    
       8   8.00000       80.0000    
       9   9.00000       90.0000    
      10   10.0000       100.000    
 
  Solution to transposed system:
 
       1   1.00000       10.0000    
       2   2.00000       20.0000    
       3   3.00000       30.0000    
       4   4.00000       40.0000    
       5   5.00000       50.0000    
       6   6.00000       60.0000    
       7   7.00000       70.0000    
       8   8.00000       80.0000    
       9   9.00000       90.0000    
      10   10.0000       100.000    
 
TEST017
  C8TO_SL solves a complex Toeplitz system.
 
  Matrix order N =        4
 
  The Toeplitz matrix:
 
  Col:          1                   2                   3                   4          
  Row
  ---
    1  0.450    -0.127    -0.843    -0.344     0.590     0.260     0.391     0.323    
    2 -0.139    -0.156     0.450    -0.127    -0.843    -0.344     0.590     0.260    
    3 -0.236     0.775E-01-0.139    -0.156     0.450    -0.127    -0.843    -0.344    
    4  0.186E-01-0.633    -0.236     0.775E-01-0.139    -0.156     0.450    -0.127    
 
 
  Desired solution:
 
       1     1.00000      -1.00000    
       2     2.00000      -2.00000    
       3     3.00000      -3.00000    
       4     4.00000      -4.00000    
 
  Right hand side:
 
       1     3.35555     -0.838263    
       2    0.187223     -0.991121    
       3    -4.53014      0.546271    
       4   -0.525864      -2.38088    
 
  Computed solution:
 
       1     1.00000      -1.00000    
       2     2.00000      -2.00000    
       3     3.00000      -3.00000    
       4     4.00000      -4.00000    
 
  Desired solution:
 
       1     1.00000      -1.00000    
       2     2.00000      -2.00000    
       3     3.00000      -3.00000    
       4     4.00000      -4.00000    
 
  Right hand side:
 
       1    -3.20229      -2.27654    
       2    -2.06232      0.549956    
       3    -1.73806      -1.12796    
       4    0.144314      -1.53617    
 
  Computed solution:
 
       1     1.00000      -1.00000    
       2     2.00000      -2.00000    
       3     3.00000      -3.00000    
       4     4.00000      -4.00000    
 
TEST019
  C8VEC_UNITY returns the N complex roots of unity.
 
 
  Roots of unity:
 
       1   1.00000       0.00000    
 
  Roots of unity:
 
       1   1.00000       0.00000    
       2  -1.00000      0.122465E-15
 
  Roots of unity:
 
       1   1.00000       0.00000    
       2 -0.500000      0.866025    
       3 -0.500000     -0.866025    
 
  Roots of unity:
 
       1   1.00000       0.00000    
       2  0.612323E-16   1.00000    
       3  -1.00000      0.122465E-15
       4 -0.183697E-15  -1.00000    
 
  Roots of unity:
 
       1   1.00000       0.00000    
       2  0.309017      0.951057    
       3 -0.809017      0.587785    
       4 -0.809017     -0.587785    
       5  0.309017     -0.951057    
 
TEST0192
  For a matrix in the R8CC format,
  (double precision compressed column sparse)
  R8CC_WRITE writes the matrix to 3 files.
 
  Matrix rows M     =        5
  Matrix columns N  =        5
  Nonzeros NZ_NUM   =       12
 
  The COL vector:
 
       1    1
       2    4
       3    6
       4    8
       5   10
       6   13
 
  The ROW vector:
 
       1    1
       2    2
       3    4
       4    1
       5    2
       6    3
       7    5
       8    4
       9    5
      10    1
      11    2
      12    5
 
  The R8CC matrix:
 
  Col:        1             2             3             4             5       
  Row
  ---
    1      11.           12.            0.            0.           15.      
    2      21.           22.            0.            0.           25.      
    3       0.            0.           33.            0.            0.      
    4      41.            0.            0.           44.            0.      
    5       0.            0.           53.           54.           55.      
 
 
TEST0193
  For a matrix in the R8CC format,
  (double precision compressed column sparse)
  R8CC_READ_SIZE reads the sizes of the data;
  R8CC_READ reads the data.
 
  Matrix rows M     =        5
  Matrix columns N  =        5
  Nonzeros NZ_NUM   =       12
  Index base (0/1)  =        1
 
  The COL vector:
 
       1    1
       2    4
       3    6
       4    8
       5   10
       6   13
 
  The ROW vector:
 
       1    1
       2    2
       3    4
       4    1
       5    2
       6    3
       7    5
       8    4
       9    5
      10    1
      11    2
      12    5
 
  The R8CC matrix:
 
  Col:        1             2             3             4             5       
  Row
  ---
    1      11.           12.            0.            0.           15.      
    2      21.           22.            0.            0.           25.      
    3       0.            0.           33.            0.            0.      
    4      41.            0.            0.           44.            0.      
    5       0.            0.           53.           54.           55.      
 
 
TEST0194
  For a compressed banded matrix,
  R8VEC_TO_R8CB converts a real vector to an R8CB matrix.
  R8CB_TO_R8VEC converts an R8CB matrix to a real vector.
 
  Matrix rows M      =        5
  Matrix columns N   =        8
  Lower bandwidth ML =        2
  Upper bandwidth MU =        1
 
  The R8CB indicator matrix:
 
  Col:       1             2             3             4             5       
  Row
  ---
    1      11.           12.                                                
    2      21.           22.           23.                                  
    3      31.           32.           33.           34.                    
    4                    42.           43.           44.           45.      
    5                                  53.           54.           55.      
 
  Col:       6             7             8       
  Row
  ---
    5      56.                                  
 
       1       1       1   0.00000    
       2       1       2   11.0000    
       3       1       3   21.0000    
       4       1       4   31.0000    
       1       2       5   12.0000    
       2       2       6   22.0000    
       3       2       7   32.0000    
       4       2       8   42.0000    
       1       3       9   23.0000    
       2       3      10   33.0000    
       3       3      11   43.0000    
       4       3      12   53.0000    
       1       4      13   34.0000    
       2       4      14   44.0000    
       3       4      15   54.0000    
       4       4      16   0.00000    
       1       5      17   45.0000    
       2       5      18   55.0000    
       3       5      19   0.00000    
       4       5      20   0.00000    
       1       6      21   56.0000    
       2       6      22   0.00000    
       3       6      23   0.00000    
       4       6      24   0.00000    
       1       7      25   0.00000    
       2       7      26   0.00000    
       3       7      27   0.00000    
       4       7      28   0.00000    
       1       8      29   0.00000    
       2       8      30   0.00000    
       3       8      31   0.00000    
       4       8      32   0.00000    
 
  The recovered R8CB indicator matrix:
 
  Col:       1             2             3             4             5       
  Row
  ---
    1      11.           12.                                                
    2      21.           22.           23.                                  
    3      31.           32.           33.           34.                    
    4                    42.           43.           44.           45.      
    5                                  53.           54.           55.      
 
  Col:       6             7             8       
  Row
  ---
    5      56.                                  
 
 
TEST0195
  For a general banded matrix,
  R8VEC_TO_R8GB converts a real vector to an R8GB matrix.
  R8GB_TO_R8VEC converts an R8GB matrix to a real vector.
 
  Matrix rows M =             5
  Matrix columns N =          8
  Lower bandwidth ML =        2
  Upper bandwidth MU =        1
 
  The R8GB indicator matrix:
 
  Col:       1             2             3             4             5       
  Row
  ---
    1    11.0000       12.0000       0.00000       0.00000                  
    2    21.0000       22.0000       23.0000       0.00000       0.00000    
    3    31.0000       32.0000       33.0000       34.0000       0.00000    
    4                  42.0000       43.0000       44.0000       45.0000    
    5                                53.0000       54.0000       55.0000    
 
  Col:       6             7             8       
  Row
  ---
    3    0.00000                                
    4    0.00000       0.00000                  
    5    56.0000       0.00000       0.00000    
 
       1       1       1   0.00000    
       2       1       2   0.00000    
       3       1       3   0.00000    
       4       1       4   11.0000    
       5       1       5   21.0000    
       6       1       6   31.0000    
       1       2       7   0.00000    
       2       2       8   0.00000    
       3       2       9   12.0000    
       4       2      10   22.0000    
       5       2      11   32.0000    
       6       2      12   42.0000    
       1       3      13   0.00000    
       2       3      14   0.00000    
       3       3      15   23.0000    
       4       3      16   33.0000    
       5       3      17   43.0000    
       6       3      18   53.0000    
       1       4      19   0.00000    
       2       4      20   0.00000    
       3       4      21   34.0000    
       4       4      22   44.0000    
       5       4      23   54.0000    
       6       4      24   0.00000    
       1       5      25   0.00000    
       2       5      26   0.00000    
       3       5      27   45.0000    
       4       5      28   55.0000    
       5       5      29   0.00000    
       6       5      30   0.00000    
       1       6      31   0.00000    
       2       6      32   0.00000    
       3       6      33   56.0000    
       4       6      34   0.00000    
       5       6      35   0.00000    
       6       6      36   0.00000    
       1       7      37   0.00000    
       2       7      38   0.00000    
       3       7      39   0.00000    
       4       7      40   0.00000    
       5       7      41   0.00000    
       6       7      42   0.00000    
       1       8      43   0.00000    
       2       8      44   0.00000    
       3       8      45   0.00000    
       4       8      46   0.00000    
       5       8      47   0.00000    
       6       8      48   0.00000    
 
  The recovered R8GB indicator matrix:
 
  Col:       1             2             3             4             5       
  Row
  ---
    1    11.0000       12.0000       0.00000       0.00000                  
    2    21.0000       22.0000       23.0000       0.00000       0.00000    
    3    31.0000       32.0000       33.0000       34.0000       0.00000    
    4                  42.0000       43.0000       44.0000       45.0000    
    5                                53.0000       54.0000       55.0000    
 
  Col:       6             7             8       
  Row
  ---
    3    0.00000                                
    4    0.00000       0.00000                  
    5    56.0000       0.00000       0.00000    
 
 
TEST0196
  For a general matrix,
  R8VEC_TO_R8GE converts a real vector to an R8GE matrix.
  R8GE_TO_R8VEC converts an R8GE matrix to a real vector.
 
  Matrix rows M =           4
  Matrix columns N =        6
 
  The R8GE indicator matrix:
 
  Col:        1             2             3             4             5       
  Row
  ---
    1      11.           12.           13.           14.           15.      
    2      21.           22.           23.           24.           25.      
    3      31.           32.           33.           34.           35.      
    4      41.           42.           43.           44.           45.      
 
  Col:        6       
  Row
  ---
    1      16.      
    2      26.      
    3      36.      
    4      46.      
 
       1       1       1   11.0000    
       2       1       2   21.0000    
       3       1       3   31.0000    
       4       1       4   41.0000    
       1       2       5   12.0000    
       2       2       6   22.0000    
       3       2       7   32.0000    
       4       2       8   42.0000    
       1       3       9   13.0000    
       2       3      10   23.0000    
       3       3      11   33.0000    
       4       3      12   43.0000    
       1       4      13   14.0000    
       2       4      14   24.0000    
       3       4      15   34.0000    
       4       4      16   44.0000    
       1       5      17   15.0000    
       2       5      18   25.0000    
       3       5      19   35.0000    
       4       5      20   45.0000    
       1       6      21   16.0000    
       2       6      22   26.0000    
       3       6      23   36.0000    
       4       6      24   46.0000    
 
  The recovered R8GE indicator matrix:
 
  Col:        1             2             3             4             5       
  Row
  ---
    1      11.           12.           13.           14.           15.      
    2      21.           22.           23.           24.           25.      
    3      31.           32.           33.           34.           35.      
    4      41.           42.           43.           44.           45.      
 
  Col:        6       
  Row
  ---
    1      16.      
    2      26.      
    3      36.      
    4      46.      
 
 
TEST02
  R83_CR_FA factors a real tridiagonal matrix;
  R83_CR_SLS solves 1 or more systems.
 
  Matrix order N =        5
  Demonstrate multiple system solution method.
 
  Solutions:
 
  Col         1             2       
  Row
 
    1       1.            1.      
    2       2.            1.      
    3       3.            1.      
    4       4.            1.      
    5       5.            1.      
 
 
TEST03
  For a real tridiagonal matrix,
  using CYCLIC REDUCTION,
  R83_CR_FA factors;
  R83_CR_SLS solves 1 or more systems.
 
  Matrix order N =       10
  The matrix is NOT symmetric.
 
  Solution:
 
  Col         1       
  Row
 
    1       1.      
    2       2.      
    3       3.      
    4       4.      
    5       5.      
    6       6.      
    7       7.      
    8    8.00000    
    9       9.      
   10      10.      
 
 
TEST035
  For a real tridiagonal system,
  R83_GS_SL solves a linear system using
    Gauss-Seidel iteration
 
  Matrix order N =           100
  Iterations per call =     1000
 
 
  Solving A * x = b.
 
 
  Number of iterations taken =     1000
  Maximum solution change on last step =   0.247421E-01
 
  Current solution estimate:
 
       1        0.252679
       2        0.506519
       3        0.762101
       4        1.020005
       5        1.280812
       6        1.545100
       7        1.813451
       8        2.086442
......  ..............
     100       99.198128
 
  Number of iterations taken =     1000
  Maximum solution change on last step =   0.920593E-02
 
  Current solution estimate:
 
       1        0.698130
       2        1.396838
       3        2.096412
       4        2.797139
       5        3.499303
       6        4.203189
       7        4.909079
       8        5.617253
......  ..............
     100       99.710384
 
  Number of iterations taken =     1000
  Maximum solution change on last step =   0.349862E-02
 
  Current solution estimate:
 
       1        0.884923
       2        1.770068
       3        2.655546
       4        3.541468
       5        4.427944
       6        5.315083
       7        6.202992
       8        7.091780
......  ..............
     100       99.890266
 
  Solving A' * x = b.
 
 
  Number of iterations taken =     1000
  Maximum solution change on last step =   0.247421E-01
 
  Current solution estimate:
 
       1        0.252679
       2        0.506519
       3        0.762101
       4        1.020005
       5        1.280812
       6        1.545100
       7        1.813451
       8        2.086442
......  ..............
     100       99.198128
 
  Number of iterations taken =     1000
  Maximum solution change on last step =   0.920593E-02
 
  Current solution estimate:
 
       1        0.698130
       2        1.396838
       3        2.096412
       4        2.797139
       5        3.499303
       6        4.203189
       7        4.909079
       8        5.617253
......  ..............
     100       99.710384
 
  Number of iterations taken =     1000
  Maximum solution change on last step =   0.349862E-02
 
  Current solution estimate:
 
       1        0.884923
       2        1.770068
       3        2.655546
       4        3.541468
       5        4.427944
       6        5.315083
       7        6.202992
       8        7.091780
......  ..............
     100       99.890266
 
TEST037
  R83_INDICATOR sets up an R83 indicator matrix.
 
  Matrix order N =       10
 
  The R83 indicator matrix:
 
  Col:       1             2             3             4             5       
  Row
  ---
    1     101.          102.                                                
    2     201.          202.          203.                                  
    3                   302.          303.          304.                    
    4                                 403.          404.          405.      
    5                                               504.          505.      
    6                                                             605.      
 
  Col:       6             7             8             9            10       
  Row
  ---
    5     506.                                                              
    6     606.          607.                                                
    7     706.          707.          708.                                  
    8                   807.          808.          809.                    
    9                                 908.          909.          910.      
   10                                              1009.         1010.      
 
 
TEST04
  For a real tridiagonal system,
  R83_JAC_SL solves a linear system using
    Jacobi iteration
 
  Matrix order N =           100
  Iterations per call =     1000
 
 
  Solving A * x = b.
 
 
  The right hand side:
 
       1         0
       2         0
       3         0
       4         0
       5         0
       6         0
       7         0
       8         0
......  ..............
     100       101
 
  Number of iterations taken =     1000
  Maximum solution change on last step =   0.488795E-01
 
  Current solution estimate:
 
       1        0.031082
       2        0.062164
       3        0.094395
       4        0.126625
       5        0.161175
       6        0.195725
       7        0.233812
       8        0.271898
......  ..............
     100       98.452273
 
  Number of iterations taken =     1000
  Maximum solution change on last step =   0.241583E-01
 
  Current solution estimate:
 
       1        0.281638
       2        0.563275
       3        0.847221
       4        1.131167
       5        1.419726
       6        1.708285
       7        2.003761
       8        2.299236
......  ..............
     100       99.198128
 
  Number of iterations taken =     1000
  Maximum solution change on last step =   0.145888E-01
 
  Current solution estimate:
 
       1        0.537777
       2        1.075555
       3        1.615051
       4        2.154547
       5        2.697476
       6        3.240404
       7        3.788467
       8        4.336530
......  ..............
     100       99.525559
 
  Solving A' * x = b.
 
 
  The right hand side:
 
       1         0
       2         0
       3         0
       4         0
       5         0
       6         0
       7         0
       8         0
......  ..............
     100       101
 
  Number of iterations taken =     1000
  Maximum solution change on last step =   0.488795E-01
 
  Current solution estimate:
 
       1        0.031082
       2        0.062164
       3        0.094395
       4        0.126625
       5        0.161175
       6        0.195725
       7        0.233812
       8        0.271898
......  ..............
     100       98.452273
 
  Number of iterations taken =     1000
  Maximum solution change on last step =   0.241583E-01
 
  Current solution estimate:
 
       1        0.281638
       2        0.563275
       3        0.847221
       4        1.131167
       5        1.419726
       6        1.708285
       7        2.003761
       8        2.299236
......  ..............
     100       99.198128
 
  Number of iterations taken =     1000
  Maximum solution change on last step =   0.145888E-01
 
  Current solution estimate:
 
       1        0.537777
       2        1.075555
       3        1.615051
       4        2.154547
       5        2.697476
       6        3.240404
       7        3.788467
       8        4.336530
......  ..............
     100       99.525559
 
TEST05
  For a tridiagonal matrix that can be factored
    with no pivoting,
  R83_NP_FA factors,
  R83_NP_DET computes the determinant.
 
  Matrix order N =       10
 
  The factored R83 matrix:
 
  Col:       1             2             3             4             5       
  Row
  ---
    1   0.633966      0.218418                                              
    2   0.214789E-01  0.570358E-01  0.956318                                
    3                  15.0624      -13.9549      0.829509                  
    4                              -0.602546E-01  0.451288      0.561695    
    5                                             0.272783      0.601452    
    6                                                           0.124904E-01
 
  Col:       6             7             8             9            10       
  Row
  ---
    5   0.415307                                                            
    6   0.792100      0.661187E-01                                          
    7   0.328624     -0.198898E-01  0.257578                                
    8                 -45.8769       12.7144      0.109957                  
    9                               0.893981E-02  0.349769      0.438290E-01
   10                                              1.00532      0.504828E-01
 
 
  R83_NP_DET computes determinant =   0.484425E-03
  R8GE_NP_DET computes determinant =   0.484425E-03
 
TEST06
  For a tridiagonal matrix that can be factored
    with no pivoting,
  R83_NP_FA factors;
  R83_NP_SL solves a factored system.
 
  Matrix order N =       10
 
  The tridiagonal matrix:
 
  Col:       1             2             3             4             5       
  Row
  ---
    1   0.633966      0.218418                                              
    2   0.136169E-01  0.617272E-01  0.956318                                
    3                 0.859097      0.449539      0.829509                  
    4                               0.840847      0.401306      0.561695    
    5                                             0.123104      0.754673    
    6                                                           0.751236E-02
 
  Col:       6             7             8             9            10       
  Row
  ---
    5   0.415307                                                            
    6   0.797287      0.661187E-01                                          
    7   0.260303      0.183837E-02  0.257578                                
    8                 0.912484      0.897504      0.109957                  
    9                               0.113664      0.350752      0.438290E-01
   10                                             0.351629      0.945448E-01
 
 
  Solution:
 
       1   1.00000    
       2   2.00000    
       3   3.00000    
       4   4.00000    
       5   5.00000    
       6   6.00000    
       7   7.00000    
       8   8.00000    
       9   9.00000    
      10   10.0000    
 
  Solution to tranposed system:
 
       1   1.00000    
       2   2.00000    
       3   3.00000    
       4   4.00000    
       5   5.00000    
       6   6.00000    
       7   7.00000    
       8   8.00000    
       9   9.00000    
      10   10.0000    
 
TEST07
  R83_NP_FS factors and solves a tridiagonal
    linear system.
 
  Matrix order N =       10
 
  Solution:
 
       1   1.00000    
       2   2.00000    
       3   3.00000    
       4   4.00000    
       5   5.00000    
       6   6.00000    
       7   7.00000    
       8   8.00000    
       9   9.00000    
      10   10.0000    
 
TEST08
  R83_NP_ML computes A*x or A'*x
    where A has been factored by R83_FA.
 
  Matrix order N =       10
 
  A*x and PLU*x:
 
       1     1.07080         1.07080    
       2     3.00602         3.00602    
       3     6.38485         6.38485    
       4     6.93624         6.93624    
       5     6.75763         6.75763    
       6     5.28411         5.28411    
       7     3.63531         3.63531    
       8     14.5570         14.5570    
       9     4.50437         4.50437    
      10     4.11011         4.11011    
 
  A'*x and (PLU)'*x
 
       1     1.36015         1.36015    
       2     4.09187         4.09187    
       3     4.38885         4.38885    
       4     4.68297         4.68297    
       5     8.34647         8.34647    
       6     8.62729         8.62729    
       7     11.4774         11.4774    
       8     14.7950         14.7950    
       9     14.3003         14.3003    
      10     2.87766         2.87766    
 
TEST09
  R83P_DET, determinant of a tridiagonal
    periodic matrix.
 
  Matrix order N =       12
 
  The periodic tridiagonal matrix:
 
  Col:       1             2             3             4             5       
  Row
  ---
    1   0.956318      0.561695                                              
    2   0.829509      0.415307      0.257578                                
    3                 0.661187E-01  0.109957      0.633966                  
    4                               0.438290E-01  0.617272E-01  0.401306    
    5                                             0.449539      0.754673    
    6                                                           0.797287    
    7                                                                       
    8                                                                       
    9                                                                       
   10                                                                       
   11                                                                       
   12   0.218418                                                            
 
  Col:       6             7             8             9            10       
  Row
  ---
    5   0.183837E-02                                                        
    6   0.897504      0.945448E-01                                          
    7   0.350752      0.136169E-01  0.840847                                
    8                 0.859097      0.123104      0.260303                  
    9                               0.751236E-02  0.912484      0.351629    
   10                                             0.113664      0.822887    
   11                                                           0.267132    
 
  Col:      11            12       
  Row
  ---
    1                 0.597917    
    2                             
    3                             
    4                             
    5                             
    6                             
    7                             
    8                             
    9                             
   10   0.692066                  
   11   0.561662      0.453794    
   12   0.861216      0.911977    
 
 
  R83P_DET computes the determinant =  -0.419241E-04
  R8GE_DET computes the determinant =  -0.419241E-04
 
TEST10
  R83P_FA factors a tridiagonal periodic system.
  R83P_SL solves a tridiagonal periodic system.
 
  Matrix order N =       10
 
  Solution:
 
       1   1.00000    
       2   2.00000    
       3   3.00000    
       4   4.00000    
       5   5.00000    
       6   6.00000    
       7   7.00000    
       8   8.00000    
       9   9.00000    
      10   10.0000    
 
  Solution to transposed system:
 
       1   1.00000    
       2   2.00000    
       3   3.00000    
       4   4.00000    
       5   5.00000    
       6   6.00000    
       7   7.00000    
       8   8.00000    
       9   9.00000    
      10   10.0000    
 
TEST105
  R83P_INDICATOR sets up an R83P indicator matrix.
 
  Matrix order N =       10
 
  The R83P indicator matrix:
 
  Col:       1             2             3             4             5       
  Row
  ---
    1     101.          102.                                                
    2     201.          202.          203.                                  
    3                   302.          303.          304.                    
    4                                 403.          404.          405.      
    5                                               504.          505.      
    6                                                             605.      
    7                                                                       
    8                                                                       
    9                                                                       
   10    1001.                                                              
 
  Col:       6             7             8             9            10       
  Row
  ---
    1                                                             110.      
    2                                                                       
    3                                                                       
    4                                                                       
    5     506.                                                              
    6     606.          607.                                                
    7     706.          707.          708.                                  
    8                   807.          808.          809.                    
    9                                 908.          909.          910.      
   10                                              1009.         1010.      
 
 
TEST11
  R83P_ML computes A*x or A'*X
    where A has been factored by R83P_FA.
 
  Matrix order N =       10
 
  A*x and PLU*x
 
       1     4.75103         4.75103    
       2     2.43286         2.43286    
       3     2.99797         2.99797    
       4     2.38493         2.38493    
       5     5.58255         5.58255    
       6     10.0333         10.0333    
       7     8.92661         8.92661    
       8     9.34124         9.34124    
       9     11.7887         11.7887    
      10     9.47027         9.47027    
 
  A'*x and (PLU)'*x
 
       1     9.20476         9.20476    
       2     4.07150         4.07150    
       3     4.25034         4.25034    
       4     4.68854         4.68854    
       5     5.55404         5.55404    
       6     6.37390         6.37390    
       7     11.2175         11.2175    
       8     12.6837         12.6837    
       9     17.7342         17.7342    
      10     14.8961         14.8961    
 
TEST115
  R85_INDICATOR sets up an R85 indicator matrix.
 
  Matrix order N =       10
 
  The R85 indicator matrix:
 
  Col:        1             2             3             4             5       
  Row
  ---
    1     101.          102.          103.                                  
    2     201.          202.          203.          204.                    
    3     301.          302.          303.          304.          305.      
    4                   402.          403.          404.          405.      
    5                                 503.          504.          505.      
    6                                               604.          605.      
    7                                                             705.      
 
  Col:        6             7             8             9            10       
  Row
  ---
    4     406.                                                              
    5     506.          507.                                                
    6     606.          607.          608.                                  
    7     706.          707.          708.          709.                    
    8     806.          807.          808.          809.          810.      
    9                   907.          908.          909.          910.      
   10                                1008.         1009.         1010.      
 
 
TEST12
  R85_NP_FS factors and solves an R85
    linear system, with no pivoting.
 
  Matrix order N =       10
 
  The pentadiagonal matrix:
 
  Col:        1             2             3             4             5       
  Row
  ---
    1   0.350752      0.438290E-01  0.218418                                
    2   0.351629      0.945448E-01  0.633966      0.956318                  
    3   0.188955      0.822887      0.136169E-01  0.617272E-01  0.829509    
    4                 0.761492      0.267132      0.859097      0.449539    
    5                               0.396988      0.692066      0.840847    
    6                                             0.185314      0.561662    
    7                                                           0.574366    
 
  Col:        6             7             8             9            10       
  Row
  ---
    4   0.561695                                                            
    5   0.401306      0.415307                                              
    6   0.123104      0.754673      0.661187E-01                            
    7   0.861216      0.751236E-02  0.797287      0.257578                  
    8   0.367027      0.453794      0.260303      0.183837E-02  0.109957    
    9                 0.617205      0.911977      0.912484      0.897504    
   10                               0.361529      0.597917      0.113664    
 
 
  The right hand side:
 
       1   1.62087    
       2   5.74755    
       3   4.58067    
       4   10.1064    
       5   15.8815    
       6   13.9567    
       7   15.8424    
       8   19.8832    
       9   16.0093    
      10   10.0938    
 
  Solution:
 
       1   1.00000    
       2   2.00000    
       3   3.00000    
       4   4.00000    
       5   5.00000    
       6   6.00000    
       7   7.00000    
       8   8.00000    
       9   9.00000    
      10   10.0000    
 
TEST13
  For a border banded matrix:
  R8BB_FA factors;
  R8BB_PRINT prints;
  R8BB_RANDOM randomizes;
  R8BB_SL solves.
 
  Matrix order N =           10
  Matrix suborder N1 =        8
  Matrix suborder N2 =        2
  Lower bandwidth ML =        1
  Upper bandwidth MU =        1
 
  The border-banded matrix:
 
  Col:       1             2             3             4             5       
  Row
  ---
    1   0.218418      0.829509          0.            0.            0.      
    2   0.956318      0.561695      0.661187E-01      0.            0.      
    3       0.        0.415307      0.257578      0.438290E-01      0.      
    4       0.            0.        0.109957      0.633966      0.449539    
    5       0.            0.            0.        0.617272E-01  0.401306    
    6       0.            0.            0.            0.        0.754673    
    7       0.            0.            0.            0.            0.      
    8       0.            0.            0.            0.            0.      
    9   0.396988      0.574366      0.617205      0.212930      0.117707    
   10   0.185314      0.367027      0.361529      0.714471      0.299329    
 
  Col:       6             7             8             9            10       
  Row
  ---
    1       0.            0.            0.        0.123104      0.692066    
    2       0.            0.            0.        0.751236E-02  0.561662    
    3       0.            0.            0.        0.260303      0.861216    
    4       0.            0.            0.        0.912484      0.453794    
    5   0.797287          0.            0.        0.113664      0.911977    
    6   0.183837E-02  0.350752          0.        0.351629      0.597917    
    7   0.897504      0.945448E-01  0.859097      0.822887      0.188955    
    8       0.        0.136169E-01  0.840847      0.267132      0.761492    
    9   0.825003      0.618618E-01  0.882833E-01  0.745303      0.899373    
   10   0.824660      0.710781      0.777994      0.308675      0.763537    
 
 
  The right hand side vector:
 
       1   9.90604    
       2   7.96230    
       3   12.7335    
       4   17.8637    
       5   17.1799    
       6   15.3835    
       7   22.2151    
       8   16.8412    
       9   26.6284    
      10   32.9193    
 
  The FACTORED border-banded matrix:
 
  Col:       1             2             3             4             5       
  Row
  ---
    1   0.956318      0.561695      0.661187E-01      0.            0.      
    2  -0.228395      0.701221     -0.151012E-01      0.            0.      
    3       0.       -0.592263      0.266522      0.438290E-01      0.      
    4       0.            0.       -0.412562      0.615884      0.449539    
    5       0.            0.            0.       -0.100225      0.754673    
    6       0.            0.            0.            0.       -0.472060    
    7       0.            0.            0.            0.            0.      
    8       0.            0.            0.            0.            0.      
    9   0.396988      0.574366      0.617205      0.212930      0.117707    
   10   0.185314      0.367027      0.361529      0.714471      0.299329    
 
  Col:       6             7             8             9            10       
  Row
  ---
    1       0.            0.            0.        0.125967      0.710759E-01
    2       0.            0.            0.       -0.181574     -0.853023    
    3       0.            0.            0.       -0.393040      -2.27612    
    4       0.            0.            0.        -1.90868       1.80997    
    5   0.183837E-02  0.350752          0.        0.758046      -3.00525    
    6   0.897504      0.945448E-01  0.859097     -0.376345      0.228679    
    7  -0.887371     -0.249472     -0.762338      -2.63153       4.76017    
    8       0.        0.545828E-01  0.799237     -0.275079     -0.982712    
    9   0.825003      0.618618E-01  0.882833E-01  -3.40831       2.84183    
   10   0.824660      0.710781      0.777994     -0.107477     -0.844588    
 
 
  Solution:
 
       1   1.00000    
       2   2.00000    
       3   3.00000    
       4   4.00000    
       5   5.00000    
       6   6.00000    
       7   7.00000    
       8   8.00000    
       9   9.00000    
      10   10.0000    
 
TEST14
  For a border banded matrix:
  R8BB_FA factors;
  R8BB_SL solves.
 
  Matrix order N =           10
  Matrix suborder N1 =        0
  Matrix suborder N2 =       10
  Lower bandwidth ML =        0
  Upper bandwidth MU =        0
 
  Solution:
 
       1   1.00000    
       2   2.00000    
       3   3.00000    
       4   4.00000    
       5   5.00000    
       6   6.00000    
       7   7.00000    
       8   8.00000    
       9   9.00000    
      10   10.0000    
 
TEST15
  For a border banded matrix:
  R8BB_FA factors;
  R8BB_SL solves.
 
  Matrix order N =           10
  Matrix suborder N1 =       10
  Matrix suborder N2 =        0
  Lower bandwidth ML =        1
  Upper bandwidth MU =        1
 
  Solution:
 
       1   1.00000    
       2   2.00000    
       3   3.00000    
       4   4.00000    
       5   5.00000    
       6   6.00000    
       7   7.00000    
       8   8.00000    
       9   9.00000    
      10   10.0000    
 
TEST151
  R8BB_INDICATOR sets up an R8BB indicator matrix.
 
  Matrix order N =            8
  Matrix suborder N1 =        6
  Matrix suborder N2 =        2
  Lower bandwidth ML =        1
  Upper bandwidth MU =        1
 
  The R8BB indicator matrix:
 
  Col:       1             2             3             4             5       
  Row
  ---
    1      11.           12.            0.            0.            0.      
    2      21.           22.           23.            0.            0.      
    3       0.           32.           33.           34.            0.      
    4       0.            0.           43.           44.           45.      
    5       0.            0.            0.           54.           55.      
    6       0.            0.            0.            0.           65.      
    7      71.           72.           73.           74.           75.      
    8      81.           82.           83.           84.           85.      
 
  Col:       6             7             8       
  Row
  ---
    1       0.           17.           18.      
    2       0.           27.           28.      
    3       0.           37.           38.      
    4       0.           47.           48.      
    5      56.           57.           58.      
    6      66.           67.           68.      
    7      76.           77.           78.      
    8      86.           87.           88.      
 
 
TEST152
  R8BLT_INDICATOR sets up an R8BLT indicator matrix.
 
  Matrix order N     =        6
  Lower bandwidth ML =        2
 
  The R8BLT indicator matrix:
 
  Col:       1             2             3             4             5       
  Row
  ---
    1      11.                                                              
    2      21.           22.                                                
    3      31.           32.           33.                                  
    4                    42.           43.           44.                    
    5                                  53.           54.           55.      
    6                                                64.           65.      
 
  Col:       6       
  Row
  ---
    6      66.      
 
 
TEST153
  For a band matrix in lower triangular storage,
  R8BLT_RANDOM sets a random value;
  R8BLT_SL solves systems;
  R8BLT_MXV computes matrix-vector products;
  R8BLT_VXM computes vector-matrix products;
 
  Matrix order N =           10
  Lower bandwidth ML =        3
 
  The R8BLT matrix:
 
  Col:       1             2             3             4             5       
  Row
  ---
    1   0.218418                                                            
    2   0.956318      0.829509                                              
    3   0.561695      0.415307      0.661187E-01                            
    4   0.257578      0.109957      0.438290E-01  0.633966                  
    5                 0.617272E-01  0.449539      0.401306      0.754673    
    6                               0.797287      0.183837E-02  0.897504    
    7                                             0.945448E-01  0.136169E-01
    8                                                           0.123104    
 
  Col:       6             7             8             9            10       
  Row
  ---
    6   0.350752                                                            
    7   0.859097      0.840847                                              
    8   0.751236E-02  0.260303      0.912484                                
    9   0.113664      0.351629      0.822887      0.267132                  
   10                 0.692066      0.561662      0.861216      0.453794    
 
 
  The right hand side:
 
       1  0.218418    
       2   2.61534    
       3   1.59067    
       4   3.14484    
       5   6.85066    
       6   8.99125    
       7   11.4868    
       8   9.78258    
       9   12.1307    
      10   21.6266    
 
  Solution to the untransposed system:
 
       1   1.00000    
       2   2.00000    
       3   3.00000    
       4   4.00000    
       5   5.00000    
       6   6.00000    
       7   7.00000    
       8   8.00000    
       9   9.00000    
      10   10.0000    
 
  The right hand side:
 
       1   4.84645    
       2   3.65340    
       3   7.40509    
       4   5.21524    
       5   10.2385    
       6   9.20127    
       7   18.0537    
       8   20.3225    
       9   11.0163    
      10   4.53794    
 
  Solution to the transposed system:
 
       1   1.00000    
       2   2.00000    
       3   3.00000    
       4   4.00000    
       5   5.00000    
       6   6.00000    
       7   7.00000    
       8   8.00000    
       9   9.00000    
      10   10.0000    
 
TEST154
  For a real block Toeplitz matrix,
  R8BTO_INDICATOR sets up an indicator matrix
 
  Block order M =         2
  Block number L =        3
  Matrix order N =        6
 
  The block Toeplitz matrix:
 
  Col:       1             2             3             4             5       
  Row
  ---
    1      11.           12.           13.           14.           15.      
    2      21.           22.           23.           24.           25.      
    3      31.           32.           11.           12.           13.      
    4      41.           42.           21.           22.           23.      
    5      51.           52.           31.           32.           11.      
    6      61.           62.           41.           42.           21.      
 
  Col:       6       
  Row
  ---
    1      16.      
    2      26.      
    3      14.      
    4      24.      
    5      12.      
    6      22.      
 
 
TEST155
  For a real block Toeplitz matrix,
  R8BTO_MXV computes A * x.
  R8BTO_VXM computes A'* x.
 
  Block order M =         2
  Block number L =        3
  Matrix order N =        6
 
  The block Toeplitz matrix:
 
  Col:       1             2             3             4             5       
  Row
  ---
    1       1.            2.            3.            4.            5.      
    2       5.            5.            6.            6.            7.      
    3       7.            8.            1.            2.            3.      
    4       8.            8.            5.            5.            6.      
    5       9.            0.            7.            8.            1.      
    6       9.            9.            8.            8.            5.      
 
  Col:       6       
  Row
  ---
    1       6.      
    2       7.      
    3       4.      
    4       6.      
    5       2.      
    6       5.      
 
 
  The "vector" x:
 
  Col:        1             2             3       
  Row
  ---
    1      11.           12.           13.      
    2      21.           22.           23.      
 
 
  The product A*x:
 
  Col:        1             2             3       
  Row
  ---
    1     380.          432.          418.      
    2     616.          642.          740.      
 
 
  The product A'*x:
 
  Col:        1             2             3       
  Row
  ---
    1     700.          556.          498.      
    2     606.          592.          534.      
 
 
TEST156
  For a real block Toeplitz matrix,
  R8BTO_SL solves a block Toeplitz system.
 
  Block order M =         2
  Block number L =        3
  Matrix order N =        6
 
  The block Toeplitz matrix:
 
  Col:       1             2             3             4             5       
  Row
  ---
    1       9.            1.            3.            4.            5.      
    2       2.            8.            6.            6.            7.      
    3       7.            8.            9.            1.            3.      
    4       8.            8.            2.            8.            6.      
    5       9.            0.            7.            8.            9.      
    6       9.            9.            8.            8.            2.      
 
  Col:       6       
  Row
  ---
    1       6.      
    2       7.      
    3       4.      
    4       6.      
    5       1.      
    6       8.      
 
 
  The right hand side B:
 
       1   97.0000    
       2   137.000    
       3   93.0000    
       4   128.000    
       5   113.000    
       6   141.000    
 
  The computed solution X:
 
       1   1.00000    
       2   2.00000    
       3   3.00000    
       4   4.00000    
       5   5.00000    
       6   6.00000    
 
TEST1565
  R8BUT_INDICATOR sets up an R8BUT indicator matrix.
 
  Matrix order N     =        6
  Upper bandwidth MU =        2
 
  The R8BUT indicator matrix:
 
  Col:       1             2             3             4             5       
  Row
  ---
    1      11.           12.           13.                                  
    2                    22.           23.           24.                    
    3                                  33.           34.           35.      
    4                                                44.           45.      
    5                                                              55.      
    6                                                                       
 
  Col:       6       
  Row
  ---
    6      66.      
 
 
TEST1566
  For a band matrix in upper triangular storage,
  R8BUT_RANDOM sets a random value;
  R8BUT_SL solves systems;
  R8BUT_MXV computes matrix-vector products;
  R8BUT_VXM computes vector-matrix products;
 
  Matrix order N =           10
  Upper bandwidth MU =        3
 
  The R8BUT matrix:
 
  Col:       1             2             3             4             5       
  Row
  ---
    1   0.260303      0.183837E-02  0.109957      0.218418                  
    2                 0.912484      0.897504      0.438290E-01  0.956318    
    3                               0.113664      0.350752      0.633966    
    4                                             0.351629      0.945448E-01
    5                                                           0.822887    
    6                                                                       
    7                                                                       
    8                                                                       
 
  Col:       6             7             8             9            10       
  Row
  ---
    6   0.267132      0.859097      0.401306      0.661187E-01              
    7                 0.692066      0.840847      0.754673      0.257578    
    8                               0.561662      0.123104      0.797287    
    9                                             0.861216      0.751236E-02
   10                                                           0.453794    
 
 
  The right hand side:
 
       1   1.46752    
       2   9.47438    
       3   9.89089    
       4   6.18147    
       5   10.6654    
       6   11.4220    
       7   20.9391    
       8   13.5741    
       9   7.82607    
      10   4.53794    
 
  Solution to the untransposed system:
 
       1   1.00000    
       2   2.00000    
       3   3.00000    
       4   4.00000    
       5   5.00000    
       6   6.00000    
       7   7.00000    
       8   8.00000    
       9   9.00000    
      10   10.0000    
 
  The right hand side:
 
       1  0.260303    
       2   1.82681    
       3   2.24596    
       4   2.76485    
       5   8.30715    
       6   4.40631    
       7   14.4935    
       8   14.8636    
       9   14.4152    
      10   12.7869    
 
  Solution to the transposed system:
 
       1   1.00000    
       2   2.00000    
       3   3.00000    
       4   4.00000    
       5   5.00000    
       6   6.00000    
       7   7.00000    
       8   8.00000    
       9   9.00000    
      10   10.0000    
 
TEST157
  For a compact band matrix:
  R8CB_INDICATOR computes the indicator matrix;
 
  Matrix rows M =             8
  Matrix columns N =         10
  Lower bandwidth ML =        2
  Upper bandwidth MU =        3
 
  The R8CB indicator matrix:
 
  Col:       1             2             3             4             5       
  Row
  ---
    1     101.          102.          103.          104.                    
    2     201.          202.          203.          204.          205.      
    3     301.          302.          303.          304.          305.      
    4                   402.          403.          404.          405.      
    5                                 503.          504.          505.      
    6                                               604.          605.      
    7                                                             705.      
 
  Col:       6             7             8             9            10       
  Row
  ---
    3     306.                                                              
    4     406.          407.                                                
    5     506.          507.          508.                                  
    6     606.          607.          608.          609.                    
    7     706.          707.          708.          709.          710.      
    8     806.          807.          808.          809.          810.      
 
 
TEST16
  For a compact band matrix, no pivoting:
  R8CB_NP_FA factors;
  R8CB_DET computes the determinant;
 
  Matrix order N     =       10
  Lower bandwidth ML =        2
  Upper bandwidth MU =        3
 
  The compact band matrix:
 
  Col:       1             2             3             4             5       
  Row
  ---
    1   0.218418      0.561695      0.109957      0.401306                  
    2   0.956318      0.415307      0.438290E-01  0.754673      0.945448E-01
    3   0.829509      0.661187E-01  0.633966      0.797287      0.136169E-01
    4                 0.257578      0.617272E-01  0.183837E-02  0.859097    
    5                               0.449539      0.897504      0.840847    
    6                                             0.350752      0.123104    
    7                                                           0.751236E-02
 
  Col:       6             7             8             9            10       
  Row
  ---
    3   0.260303                                                            
    4   0.912484      0.692066                                              
    5   0.113664      0.561662      0.188955                                
    6   0.351629      0.861216      0.761492      0.617205                  
    7   0.822887      0.453794      0.396988      0.361529      0.299329    
    8   0.267132      0.911977      0.185314      0.212930      0.825003    
    9                 0.597917      0.574366      0.714471      0.824660    
   10                               0.367027      0.117707      0.618618E-01
 
 
  R8CB_DET computes the determinant =   0.183588E-01
  R8GE_DET computes the determinant =   0.183588E-01
 
TEST17
  For a compact band matrix, no pivoting:
  R8CB_NP_FA factors;
  R8CB_NP_SL solves.
 
  Matrix order N     =       10
  Lower bandwidth ML =        1
  Upper bandwidth MU =        2
 
  Solution:
 
       1   1.00000    
       2   2.00000    
       3   3.00000    
       4   4.00000    
       5   5.00000    
       6   6.00000    
       7   7.00000    
       8   8.00000    
       9   9.00000    
      10   10.0000    
 
  Solution to transposed system:
 
       1   1.00000    
       2   2.00000    
       3   3.00000    
       4   4.00000    
       5   5.00000    
       6   6.00000    
       7   7.00000    
       8   8.00000    
       9   9.00000    
      10   10.0000    
 
TEST18
  For a compact band matrix:
  R8CB_ML computes A*x or A'*X
    where A has been factored by R8CB_FA.
 
  Matrix order N     =       10
  Lower bandwidth ML =        1
  Upper bandwidth MU =        2
 
  A*x and PLU*x
 
       1     2.07579         2.07579    
       2     5.38830         5.38830    
       3     5.18076         5.18076    
       4     8.02059         8.02059    
       5     8.06762         8.06762    
       6     12.7308         12.7308    
       7     8.52067         8.52067    
       8     15.4017         15.4017    
       9     20.7578         20.7578    
      10     13.7301         13.7301    
 
  A'*x and (PLU)'*x
 
       1     1.71194         1.71194    
       2     2.49071         2.49071    
       3     3.53774         3.53774    
       4     7.10439         7.10439    
       5     6.80503         6.80503    
       6     14.9862         14.9862    
       7     18.7469         18.7469    
       8     7.88328         7.88328    
       9     12.7733         12.7733    
      10     2.65418         2.65418    
 
TEST19
  For a compressed border banded matrix:
  R8CBB_RANDOM randomly generates;
  R8CBB_PRINT prints;
  R8CBB_FA factors (no pivoting);
  R8CBB_SL solves.
 
  Matrix order N     =       10
  Matrix suborder N1 =        8
  Matrix suborder N2 =        2
  Lower bandwidth ML =        1
  Upper bandwidth MU =        1
 
  The R8CBB matrix:
 
  Col:       1             2             3             4             5       
  Row
  ---
    1   0.218418      0.829509          0.            0.            0.      
    2   0.956318      0.561695      0.661187E-01      0.            0.      
    3       0.        0.415307      0.257578      0.438290E-01      0.      
    4       0.            0.        0.109957      0.633966      0.449539    
    5       0.            0.            0.        0.617272E-01  0.401306    
    6       0.            0.            0.            0.        0.754673    
    7       0.            0.            0.            0.            0.      
    8       0.            0.            0.            0.            0.      
    9   0.396988      0.574366      0.617205      0.212930      0.117707    
   10   0.185314      0.367027      0.361529      0.714471      0.299329    
 
  Col:       6             7             8             9            10       
  Row
  ---
    1       0.            0.            0.        0.123104      0.692066    
    2       0.            0.            0.        0.751236E-02  0.561662    
    3       0.            0.            0.        0.260303      0.861216    
    4       0.            0.            0.        0.912484      0.453794    
    5   0.797287          0.            0.        0.113664      0.911977    
    6   0.183837E-02  0.350752          0.        0.351629      0.597917    
    7   0.897504      0.945448E-01  0.859097      0.822887      0.188955    
    8       0.        0.136169E-01  0.840847      0.267132      0.761492    
    9   0.825003      0.618618E-01  0.882833E-01  0.745303      0.899373    
   10   0.824660      0.710781      0.777994      0.308675      0.763537    
 
 
  The factored R8CBB matrix:
 
  Col:       1             2             3             4             5       
  Row
  ---
    1   0.218418      0.829509          0.            0.            0.      
    2   -4.37838      -3.07021      0.661187E-01      0.            0.      
    3       0.        0.135270      0.266522      0.438290E-01      0.      
    4       0.            0.       -0.412562      0.615884      0.449539    
    5       0.            0.            0.       -0.100225      0.356251    
    6       0.            0.            0.            0.        -2.11838    
    7       0.            0.            0.            0.            0.      
    8       0.            0.            0.            0.            0.      
    9   0.396988      0.574366      0.617205      0.212930      0.117707    
   10   0.185314      0.367027      0.361529      0.714471      0.299329    
 
  Col:       6             7             8             9            10       
  Row
  ---
    1       0.            0.            0.        0.125967      0.710759E-01
    2       0.            0.            0.       -0.181574     -0.853023    
    3       0.            0.            0.       -0.393040      -2.27612    
    4       0.            0.            0.        -1.90868       1.80997    
    5   0.797287          0.            0.        0.758046      -3.00525    
    6   -1.68711      0.350752          0.       -0.376345      0.228679    
    7   0.531976      0.281136      0.859097      -2.63153       4.76017    
    8       0.       -0.484352E-01  0.799237     -0.275079     -0.982712    
    9   0.825003      0.618618E-01  0.882833E-01 -0.366315     -0.539156    
   10   0.824660      0.710781      0.777994      -9.30432       7.85831    
 
 
  The right hand side vector:
 
       1   9.90604    
       2   7.96230    
       3   12.7335    
       4   17.8637    
       5   17.1799    
       6   15.3835    
       7   22.2151    
       8   16.8412    
       9   26.6284    
      10   32.9193    
 
  Solution:
 
       1   1.00000    
       2   2.00000    
       3   3.00000    
       4   4.00000    
       5   5.00000    
       6   6.00000    
       7   7.00000    
       8   8.00000    
       9   9.00000    
      10   10.0000    
 
TEST193
  For a compressed border banded matrix:
  R8CBB_INDICATOR sets an indicator matrix.
 
  Matrix order N     =       10
  Matrix suborder N1 =        8
  Matrix suborder N2 =        2
  Lower bandwidth ML =        1
  Upper bandwidth MU =        1
 
  The compact border-banded matrix:
 
  Col:       1             2             3             4             5       
  Row
  ---
    1     101.          102.            0.            0.            0.      
    2     201.          202.          203.            0.            0.      
    3       0.          302.          303.          304.            0.      
    4       0.            0.          403.          404.          405.      
    5       0.            0.            0.          504.          505.      
    6       0.            0.            0.            0.          605.      
    7       0.            0.            0.            0.            0.      
    8       0.            0.            0.            0.            0.      
    9     901.          902.          903.          904.          905.      
   10    1001.         1002.         1003.         1004.         1005.      
 
  Col:       6             7             8             9            10       
  Row
  ---
    1       0.            0.            0.          109.          110.      
    2       0.            0.            0.          209.          210.      
    3       0.            0.            0.          309.          310.      
    4       0.            0.            0.          409.          410.      
    5     506.            0.            0.          509.          510.      
    6     606.          607.            0.          609.          610.      
    7     706.          707.          708.          709.          710.      
    8       0.          807.          808.          809.          810.      
    9     906.          907.          908.          909.          910.      
   10    1006.         1007.         1008.         1009.         1010.      
 
 
TEST195
  R8CI_EVAL finds the eigenvalues of 
  a real circulant system.
 
  Matrix order N =        5
 
  The circulant matrix:
 
  Col:       1             2             3             4             5       
  Row
  ---
    1   0.218418      0.956318      0.829509      0.561695      0.415307    
    2   0.415307      0.218418      0.956318      0.829509      0.561695    
    3   0.561695      0.415307      0.218418      0.956318      0.829509    
    4   0.829509      0.561695      0.415307      0.218418      0.956318    
    5   0.956318      0.829509      0.561695      0.415307      0.218418    
 
 
  The eigenvalues:
 
       1 -0.461343     -0.632919E-01
       2 -0.461343      0.632919E-01
       3 -0.483235     -0.671949    
       4 -0.483235      0.671949    
       5   2.98125       0.00000    
 
TEST197
  R8CI_INDICATOR sets up an R8CI indicator matrix.
 
  Matrix order N =        5
 
  The circulant matrix:
 
  Col:       1             2             3             4             5       
  Row
  ---
    1      11.           12.           13.           14.           15.      
    2      15.           11.           12.           13.           14.      
    3      14.           15.           11.           12.           13.      
    4      13.           14.           15.           11.           12.      
    5      12.           13.           14.           15.           11.      
 
 
TEST20
  R8CI_SL solves a circulant system.
 
  Matrix order N =       10
 
  The circulant matrix:
 
  Col:       1             2             3             4             5       
  Row
  ---
    1   0.218418      0.956318      0.829509      0.561695      0.415307    
    2   0.633966      0.218418      0.956318      0.829509      0.561695    
    3   0.438290E-01  0.633966      0.218418      0.956318      0.829509    
    4   0.109957      0.438290E-01  0.633966      0.218418      0.956318    
    5   0.257578      0.109957      0.438290E-01  0.633966      0.218418    
    6   0.661187E-01  0.257578      0.109957      0.438290E-01  0.633966    
    7   0.415307      0.661187E-01  0.257578      0.109957      0.438290E-01
    8   0.561695      0.415307      0.661187E-01  0.257578      0.109957    
    9   0.829509      0.561695      0.415307      0.661187E-01  0.257578    
   10   0.956318      0.829509      0.561695      0.415307      0.661187E-01
 
  Col:       6             7             8             9            10       
  Row
  ---
    1   0.661187E-01  0.257578      0.109957      0.438290E-01  0.633966    
    2   0.415307      0.661187E-01  0.257578      0.109957      0.438290E-01
    3   0.561695      0.415307      0.661187E-01  0.257578      0.109957    
    4   0.829509      0.561695      0.415307      0.661187E-01  0.257578    
    5   0.956318      0.829509      0.561695      0.415307      0.661187E-01
    6   0.218418      0.956318      0.829509      0.561695      0.415307    
    7   0.633966      0.218418      0.956318      0.829509      0.561695    
    8   0.438290E-01  0.633966      0.218418      0.956318      0.829509    
    9   0.109957      0.438290E-01  0.633966      0.218418      0.956318    
   10   0.257578      0.109957      0.438290E-01  0.633966      0.218418    
 
 
  Solution:
 
       1   1.00000    
       2   2.00000    
       3   3.00000    
       4   4.00000    
       5   5.00000    
       6   6.00000    
       7   7.00000    
       8   8.00000    
       9   9.00000    
      10   10.0000    
 
  Solution to transposed system:
 
       1   1.00000    
       2   2.00000    
       3   3.00000    
       4   4.00000    
       5   5.00000    
       6   6.00000    
       7   7.00000    
       8   8.00000    
       9   9.00000    
      10   10.0000    
 
TEST21
  For a general banded matrix,
  R8GB_DET computes the determinant.
 
  Matrix rows M =             10
  Matrix columns N =          10
  Lower bandwidth ML  =        3
  Upper bandwidth MU  =        2
 
  A random R8GB matrix:
 
  Col:       1             2             3             4             5       
  Row
  ---
    1   0.218418      0.415307      0.633966       0.00000       0.00000    
    2   0.956318      0.661187E-01  0.617272E-01  0.183837E-02   0.00000    
    3   0.829509      0.257578      0.449539      0.897504      0.840847    
    4   0.561695      0.109957      0.401306      0.350752      0.123104    
    5                 0.438290E-01  0.754673      0.945448E-01  0.751236E-02
    6                               0.797287      0.136169E-01  0.260303    
    7                                             0.859097      0.912484    
    8                                                           0.113664    
 
  Col:       6             7             8             9            10       
  Row
  ---
    1    0.00000                                                            
    2    0.00000       0.00000                                              
    3    0.00000       0.00000       0.00000                                
    4   0.351629       0.00000       0.00000       0.00000                  
    5   0.822887      0.453794       0.00000       0.00000       0.00000    
    6   0.267132      0.911977      0.185314       0.00000       0.00000    
    7   0.692066      0.597917      0.574366      0.212930       0.00000    
    8   0.561662      0.188955      0.367027      0.714471      0.825003    
    9   0.861216      0.761492      0.617205      0.117707      0.824660    
   10                 0.396988      0.361529      0.299329      0.618618E-01
 
 
  R8GB_DET computes the determinant =   0.240436E-02
  R8GE_DET computes the determinant =   0.240436E-02
 
TEST22
  For a general banded matrix,
  R8GB_FA computes the PLU factors.
  R8GB_SL solves a factored linear system.
 
  Matrix rows M =             5
  Matrix columns N =          5
  Lower bandwidth ML =        1
  Upper bandwidth MU =        2
 
  The banded matrix:
 
  Col:       1             2             3             4             5       
  Row
  ---
    1   0.218418      0.829509      0.661187E-01   0.00000                  
    2   0.956318      0.561695      0.257578      0.633966       0.00000    
    3                 0.415307      0.109957      0.617272E-01  0.754673    
    4                               0.438290E-01  0.449539      0.797287    
    5                                             0.401306      0.183837E-02
 
 
  Solution:
 
       1   1.00000    
       2   2.00000    
       3   3.00000    
       4   4.00000    
       5   5.00000    
 
  Right hand side of transposed system:
 
       1   2.13105    
       2   3.19882    
       3   1.08646    
       4   5.25780    
       5   5.46236    
 
  Solution to transposed system:
 
       1   1.00000    
       2   2.00000    
       3   3.00000    
       4   4.00000    
       5   5.00000    
 
TEST23
  For a general banded matrix,
  R8GB_FA factors, using LINPACK conventions;
  R8GB_TRF factors, using LAPACK conventions;
 
  Matrix rows M =             5
  Matrix columns N =          5
  Lower bandwidth ML =        1
  Upper bandwidth MU =        1
 
  The R8GB_FA factors:
 
  Col:       1             2             3             4             5       
  Row
  ---
    1   0.956318      0.561695      0.661187E-01                            
    2  -0.228395      0.701221     -0.151012E-01   0.00000                  
    3                -0.592263      0.266522      0.438290E-01   0.00000    
    4                              -0.412562      0.615884      0.449539    
    5                                            -0.100225      0.356251    
 
 
  The R8GB_TRF factors:
 
  Col:       1             2             3             4             5       
  Row
  ---
    1   0.956318      0.561695      0.661187E-01                            
    2   0.228395      0.701221     -0.151012E-01   0.00000                  
    3                 0.592263      0.266522      0.438290E-01   0.00000    
    4                               0.412562      0.615884      0.449539    
    5                                             0.100225      0.356251    
 
 
TEST235
  For a general banded matrix,
  R8GB_INDICATOR computes the indicator matrix.
 
  Matrix rows M =             10
  Matrix columns N =           8
  Lower bandwidth ML  =        3
  Upper bandwidth MU  =        2
 
  The banded matrix in R8GE format:
 
  Col:        1             2             3             4             5       
  Row
  ---
    1      -1.           -6.          -10.          -13.          -15.      
    2      -2.           -7.          -11.          -14.            0.      
    3      -3.           -8.          -12.            0.            0.      
    4      -4.           -9.           13.           24.           35.      
    5      -5.           12.           23.           34.           45.      
    6      11.           22.           33.           44.           55.      
    7      21.           32.           43.           54.           65.      
    8      31.           42.           53.           64.           75.      
    9      41.           52.           63.           74.           85.      
 
  Col:        6             7             8       
  Row
  ---
    1       0.            0.            0.      
    2       0.            0.            0.      
    3       0.            0.            0.      
    4      46.           57.           68.      
    5      56.           67.           78.      
    6      66.           77.           88.      
    7      76.           87.           98.      
    8      86.           97.          108.      
    9      96.          107.          -16.      
 
 
  The R8GB indicator matrix:
 
  Col:       1             2             3             4             5       
  Row
  ---
    1    11.0000       12.0000       13.0000       0.00000       0.00000    
    2    21.0000       22.0000       23.0000       24.0000       0.00000    
    3    31.0000       32.0000       33.0000       34.0000       35.0000    
    4    41.0000       42.0000       43.0000       44.0000       45.0000    
    5                  52.0000       53.0000       54.0000       55.0000    
    6                                63.0000       64.0000       65.0000    
    7                                              74.0000       75.0000    
    8                                                            85.0000    
 
  Col:       6             7             8       
  Row
  ---
    1    0.00000                                
    2    0.00000       0.00000                  
    3    0.00000       0.00000       0.00000    
    4    46.0000       0.00000       0.00000    
    5    56.0000       57.0000       0.00000    
    6    66.0000       67.0000       68.0000    
    7    76.0000       77.0000       78.0000    
    8    86.0000       87.0000       88.0000    
    9    96.0000       97.0000       98.0000    
   10                  107.000       108.000    
 
 
TEST24
  For a general banded matrix,
  R8GB_ML computes A*x or A'*X
    where A has been factored by R8GB_FA.
 
  Matrix rows M =            10
  Matrix columns N =         10
  Lower bandwidth ML =        1
  Upper bandwidth MU =        2
 
  A*x and PLU*x
 
       1     2.07579         2.07579    
       2     5.38830         5.38830    
       3     5.18076         5.18076    
       4     8.02059         8.02059    
       5     8.06762         8.06762    
       6     12.7308         12.7308    
       7     8.52067         8.52067    
       8     15.4017         15.4017    
       9     20.7578         20.7578    
      10     13.7301         13.7301    
 
  A'*x and (PLU)'*x
 
       1     1.71194         1.71194    
       2     2.49071         2.49071    
       3     3.53774         3.53774    
       4     7.10439         7.10439    
       5     6.80503         6.80503    
       6     14.9862         14.9862    
       7     18.7469         18.7469    
       8     7.88328         7.88328    
       9     12.7733         12.7733    
      10     2.65418         2.65418    
 
TEST25
  For a general banded matrix,
  R8GB_PRINT prints the matrix.
 
  Matrix rows M =             8
  Matrix columns N =         10
  Lower bandwidth ML =        1
  Upper bandwidth MU =        3
 
  The R8GB matrix:
 
  Col:       1             2             3             4             5       
  Row
  ---
    1    101.000       102.000       103.000       104.000       0.00000    
    2    201.000       202.000       203.000       204.000       205.000    
    3                  302.000       303.000       304.000       305.000    
    4                                403.000       404.000       405.000    
    5                                              504.000       505.000    
    6                                                            605.000    
 
  Col:       6             7             8             9            10       
  Row
  ---
    2    0.00000                                                            
    3    306.000       0.00000                                              
    4    406.000       407.000       0.00000                                
    5    506.000       507.000       508.000       0.00000                  
    6    606.000       607.000       608.000       609.000       0.00000    
    7    706.000       707.000       708.000       709.000       710.000    
    8                  807.000       808.000       809.000       810.000    
 
 
TEST26
  For a general banded matrix,
  R8GB_R8GB_NZ_NUM counts the nonzero entries.
 
  Matrix rows M =            10
  Matrix columns N =         10
  Lower bandwidth ML =        1
  Upper bandwidth MU =        2
 
  The R8GB matrix:
 
  Col:       1             2             3             4             5       
  Row
  ---
    1    0.00000      0.829509       0.00000       0.00000                  
    2   0.956318      0.561695       0.00000      0.633966       0.00000    
    3                 0.415307       0.00000       0.00000      0.754673    
    4                                0.00000      0.449539      0.797287    
    5                                             0.401306       0.00000    
    6                                                           0.897504    
 
  Col:       6             7             8             9            10       
  Row
  ---
    3    0.00000                                                            
    4   0.350752       0.00000                                              
    5    0.00000      0.840847       0.00000                                
    6    0.00000       0.00000      0.912484       0.00000                  
    7   0.859097       0.00000       0.00000       0.00000       0.00000    
    8                  0.00000      0.351629      0.692066      0.453794    
    9                               0.822887      0.561662      0.911977    
   10                                             0.861216      0.597917    
 
 
  Nonzero entries =       22
 
TEST265
  R8GB_TO_R8GE copies a R8GB matrix to a R8GE matrix.
  R8GE_TO_R8GB copies a R8GE matrix to a R8GB matrix.
 
  Matrix rows M =             5
  Matrix columns N =          8
  Lower bandwidth ML =        2
  Upper bandwidth MU =        1
 
  The R8GB matrix:
 
  Col:       1             2             3             4             5       
  Row
  ---
    1    11.0000       12.0000       0.00000       0.00000                  
    2    21.0000       22.0000       23.0000       0.00000       0.00000    
    3    31.0000       32.0000       33.0000       34.0000       0.00000    
    4                  42.0000       43.0000       44.0000       45.0000    
    5                                53.0000       54.0000       55.0000    
 
  Col:       6             7             8       
  Row
  ---
    3    0.00000                                
    4    0.00000       0.00000                  
    5    56.0000       0.00000       0.00000    
 
 
  The R8GE matrix:
 
  Col:        1             2             3             4             5       
  Row
  ---
    1      11.           12.            0.            0.            0.      
    2      21.           22.           23.            0.            0.      
    3      31.           32.           33.           34.            0.      
    4       0.           42.           43.           44.           45.      
    5       0.            0.           53.           54.           55.      
 
  Col:        6             7             8       
  Row
  ---
    1       0.            0.            0.      
    2       0.            0.            0.      
    3       0.            0.            0.      
    4       0.            0.            0.      
    5      56.            0.            0.      
 
 
  The recovered R8GB matrix:
 
  Col:       1             2             3             4             5       
  Row
  ---
    1    11.0000       12.0000       0.00000       0.00000                  
    2    21.0000       22.0000       23.0000       0.00000       0.00000    
    3    31.0000       32.0000       33.0000       34.0000       0.00000    
    4                  42.0000       43.0000       44.0000       45.0000    
    5                                53.0000       54.0000       55.0000    
 
  Col:       6             7             8       
  Row
  ---
    3    0.00000                                
    4    0.00000       0.00000                  
    5    56.0000       0.00000       0.00000    
 
 
TEST2655
  R8GB_TO_R8S3 copies a R8GB matrix to a R8S3 matrix.
 
  Matrix rows M =             5
  Matrix columns N =          8
  Lower bandwidth ML =        2
  Upper bandwidth MU =        1
 
  The R8GB matrix:
 
  Col:       1             2             3             4             5       
  Row
  ---
    1    11.0000       12.0000       0.00000       0.00000                  
    2    21.0000       22.0000       23.0000       0.00000       0.00000    
    3    31.0000       32.0000       33.0000       34.0000       0.00000    
    4                  42.0000       43.0000       44.0000       45.0000    
    5                                53.0000       54.0000       55.0000    
 
  Col:       6             7             8       
  Row
  ---
    3    0.00000                                
    4    0.00000       0.00000                  
    5    56.0000       0.00000       0.00000    
 
  Nonzeros NZ_NUM =          17
 
  The R8S3 matrix:
 
  Col:        1             2             3             4             5       
  Row
  ---
    1      11.           12.            0.            0.            0.      
    2      21.           22.           23.            0.            0.      
    3      31.           32.           33.           34.            0.      
    4       0.           42.           43.           44.           45.      
    5       0.            0.           53.           54.           55.      
 
  Col:        6             7             8       
  Row
  ---
    5      56.            0.            0.      
 
 
TEST27
  For a general banded matrix,
  R8GB_TRF computes the PLU factors.
  R8GB_TRS solves a factored linear system.
 
  Matrix rows M =            10
  Matrix columns N =         10
  Lower bandwidth ML =        1
  Upper bandwidth MU =        2
 
  Solution:
 
       1   1.00000    
       2   2.00000    
       3   3.00000    
       4   4.00000    
       5   5.00000    
       6   6.00000    
       7   7.00000    
       8   8.00000    
       9   9.00000    
      10   10.0000    
 
  Solution to transposed system:
 
       1   1.00000    
       2   2.00000    
       3   3.00000    
       4   4.00000    
       5   5.00000    
       6   6.00000    
       7   7.00000    
       8   8.00000    
       9   9.00000    
      10   10.0000    
 
TEST275
  For a general diagonal matrix:
  R8GD_INDICATOR sets up an indicator matrix.
 
  Matrix order N            =       10
  Number of diagonals NDIAG =        4
 
  The offset vector:
 
       1   -2
       2    0
       3    1
       4    9
 
  The general diagonal matrix:
 
  Col:       1             2             3             4             5       
  Row
  ---
    1     101.          102.            0.            0.            0.      
    2       0.          202.          203.            0.            0.      
    3     301.            0.          303.          304.            0.      
    4       0.          402.            0.          404.          405.      
    5       0.            0.          503.            0.          505.      
    6       0.            0.            0.          604.            0.      
    7       0.            0.            0.            0.          705.      
    8       0.            0.            0.            0.            0.      
    9       0.            0.            0.            0.            0.      
   10       0.            0.            0.            0.            0.      
 
  Col:       6             7             8             9            10       
  Row
  ---
    1       0.            0.            0.            0.          110.      
    2       0.            0.            0.            0.            0.      
    3       0.            0.            0.            0.            0.      
    4       0.            0.            0.            0.            0.      
    5     506.            0.            0.            0.            0.      
    6     606.          607.            0.            0.            0.      
    7       0.          707.          708.            0.            0.      
    8     806.            0.          808.          809.            0.      
    9       0.          907.            0.          909.          910.      
   10       0.            0.         1008.            0.         1010.      
 
 
TEST28
  For a general diagonal matrix:
  R8GD_MXV computes A * x;
  R8GD_PRINT prints it;
  R8GD_RANDOM randomly generates one;
  R8GD_VXM computes A'*x;
 
  Matrix order N            =       10
  Number of diagonals NDIAG =        4
 
  The offset vector:
 
       1   -2
       2    0
       3    1
       4    9
 
  The raw matrix:
 
  Col:        1             2             3             4       
  Row
  ---
    1       0.        0.218418      0.956318      0.829509    
    2       0.        0.561695      0.415307          0.      
    3   0.661187E-01  0.257578      0.109957          0.      
    4   0.438290E-01  0.633966      0.617272E-01      0.      
    5   0.449539      0.401306      0.754673          0.      
    6   0.797287      0.183837E-02  0.897504          0.      
    7   0.350752      0.945448E-01  0.136169E-01      0.      
    8   0.859097      0.840847      0.123104          0.      
    9   0.751236E-02  0.260303      0.912484          0.      
   10   0.113664      0.351629          0.            0.      
 
 
  The general diagonal matrix:
 
  Col:       1             2             3             4             5       
  Row
  ---
    1   0.218418      0.956318          0.            0.            0.      
    2       0.        0.561695      0.415307          0.            0.      
    3   0.661187E-01      0.        0.257578      0.109957          0.      
    4       0.        0.438290E-01      0.        0.633966      0.617272E-01
    5       0.            0.        0.449539          0.        0.401306    
    6       0.            0.            0.        0.797287          0.      
    7       0.            0.            0.            0.        0.350752    
    8       0.            0.            0.            0.            0.      
    9       0.            0.            0.            0.            0.      
   10       0.            0.            0.            0.            0.      
 
  Col:       6             7             8             9            10       
  Row
  ---
    1       0.            0.            0.            0.        0.829509    
    2       0.            0.            0.            0.            0.      
    3       0.            0.            0.            0.            0.      
    4       0.            0.            0.            0.            0.      
    5   0.754673          0.            0.            0.            0.      
    6   0.183837E-02  0.897504          0.            0.            0.      
    7       0.        0.945448E-01  0.136169E-01      0.            0.      
    8   0.859097          0.        0.840847      0.123104          0.      
    9       0.        0.751236E-02      0.        0.260303      0.912484    
   10       0.            0.        0.113664          0.        0.351629    
 
 
  A * x:
 
       1   10.4261    
       2   2.36931    
       3   1.27868    
       4   2.93216    
       5   7.88319    
       6   9.48271    
       7   2.52451    
       8   12.9893    
       9   11.5202    
      10   4.42560    
 
  A' * x:
 
       1  0.416775    
       2   2.25502    
       3   3.85104    
       4   7.64945    
       5   4.70871    
       6   10.6572    
       7   6.11445    
       8   7.95874    
       9   3.32756    
      10   12.5581    
 
TEST285
  For a matrix in general storage,
  R8GE_CO estimates the condition number.
 
  Matrix order N =        4
 
  The L1 condition number is    10.0000    
 
  The R8GE_CO estimate is        7.00000    
 
TEST29
  For a matrix in general storage,
  R8GE_DET computes the determinant.
 
  Matrix order N =        4
 
  R8GE_DET computes the determinant =    112.000    
  Exact determinant =                   112.000    
 
TEST295
  For a matrix in general storage,
  R8GE_DILU returns the DILU factors.
 
  Matrix rows M =           9
  Matrix columns N =        9
 
  Matrix A:
 
  Col:        1             2             3             4             5       
  Row
  ---
    1       4.           -1.            0.           -1.            0.      
    2      -1.            4.           -1.            0.           -1.      
    3       0.           -1.            4.           -1.            0.      
    4      -1.            0.           -1.            4.           -1.      
    5       0.           -1.            0.           -1.            4.      
    6       0.            0.           -1.            0.           -1.      
    7       0.            0.            0.           -1.            0.      
    8       0.            0.            0.            0.           -1.      
    9       0.            0.            0.            0.            0.      
 
  Col:        6             7             8             9       
  Row
  ---
    1       0.            0.            0.            0.      
    2       0.            0.            0.            0.      
    3      -1.            0.            0.            0.      
    4       0.           -1.            0.            0.      
    5      -1.            0.           -1.            0.      
    6       4.           -1.            0.           -1.      
    7      -1.            4.           -1.            0.      
    8       0.           -1.            4.           -1.      
    9      -1.            0.           -1.            4.      
 
 
  DILU factor:
 
       1  0.250000    
       2  0.266667    
       3  0.267857    
       4  0.287179    
       5  0.290179    
       6  0.290532    
       7  0.292202    
       8  0.292601    
       9  0.292666    
 
TEST30
  For a matrix in general storage,
  R8GE_FA computes the LU factors,
  R8GE_SL solves a factored system.
 
  Matrix order N =       10
 
  Solution:
 
       1   1.00000    
       2   2.00000    
       3   3.00000    
       4   4.00000    
       5   5.00000    
       6   6.00000    
       7   7.00000    
       8   8.00000    
       9   9.00000    
      10   10.0000    
 
  Solution:
 
       1   1.00000    
       2   1.00000    
       3   1.00000    
       4   1.00000    
       5   1.00000    
       6   1.00000    
       7   1.00000    
       8   1.00000    
       9   1.00000    
      10   1.00000    
 
  Solution of transposed system:
 
       1   1.00000    
       2   2.00000    
       3   3.00000    
       4   4.00000    
       5   5.00000    
       6   6.00000    
       7   7.00000    
       8   8.00000    
       9   9.00000    
      10   10.0000    
 
TEST31
  For a matrix in general storage,
  R8GE_FA computes the LU factors,
  R8GE_SL solves a factored system.
 
  Matrix order N =        5
 
  The matrix:
 
  Col:        1             2             3             4             5       
  Row
  ---
    1   0.218418      0.661187E-01  0.617272E-01  0.183837E-02  0.859097    
    2   0.956318      0.257578      0.449539      0.897504      0.840847    
    3   0.829509      0.109957      0.401306      0.350752      0.123104    
    4   0.561695      0.438290E-01  0.754673      0.945448E-01  0.751236E-02
    5   0.415307      0.633966      0.797287      0.136169E-01  0.260303    
 
 
  The compressed LU factors:
 
  Col         1             2             3             4             5       
  Row
 
    1   0.956318      0.257578      0.449539      0.897504      0.840847    
    2  -0.228395      0.522106      0.602062     -0.376149     -0.104858    
    3  -0.867399      0.217324      0.614552     -0.510026     -0.507943    
    4  -0.587352      0.205820     -0.231419     -0.391459     -0.511487    
    5  -0.434277     -0.139612E-01  0.803036E-01 -0.610161      0.939815    
 
 
  The pivot vector P:
 
       1    2
       2    5
       3    4
       4    4
       5    5
 
  Solution:
 
       1   1.00000    
       2   2.00000    
       3   3.00000    
       4   4.00000    
       5   5.00000    
 
TEST315
  For a matrix in general storage,
  R8GE_ILU returns the ILU factors.
 
  Matrix rows M =           9
  Matrix columns N =        9
 
  Matrix A:
 
  Col:        1             2             3             4             5       
  Row
  ---
    1       4.           -1.            0.           -1.            0.      
    2      -1.            4.           -1.            0.           -1.      
    3       0.           -1.            4.           -1.            0.      
    4      -1.            0.           -1.            4.           -1.      
    5       0.           -1.            0.           -1.            4.      
    6       0.            0.           -1.            0.           -1.      
    7       0.            0.            0.           -1.            0.      
    8       0.            0.            0.            0.           -1.      
    9       0.            0.            0.            0.            0.      
 
  Col:        6             7             8             9       
  Row
  ---
    1       0.            0.            0.            0.      
    2       0.            0.            0.            0.      
    3      -1.            0.            0.            0.      
    4       0.           -1.            0.            0.      
    5      -1.            0.           -1.            0.      
    6       4.           -1.            0.           -1.      
    7      -1.            4.           -1.            0.      
    8       0.           -1.            4.           -1.      
    9      -1.            0.           -1.            4.      
 
 
  Factor L:
 
  Col:        1             2             3             4             5       
  Row
  ---
    1       1.            0.            0.            0.            0.      
    2  -0.250000          1.            0.            0.            0.      
    3       0.       -0.266667          1.            0.            0.      
    4  -0.250000          0.       -0.267857          1.            0.      
    5       0.       -0.266667          0.       -0.287179          1.      
    6       0.            0.       -0.267857          0.       -0.290179    
    7       0.            0.            0.       -0.287179          0.      
    8       0.            0.            0.            0.       -0.290179    
    9       0.            0.            0.            0.            0.      
 
  Col:        6             7             8             9       
  Row
  ---
    1       0.            0.            0.            0.      
    2       0.            0.            0.            0.      
    3       0.            0.            0.            0.      
    4       0.            0.            0.            0.      
    5       0.            0.            0.            0.      
    6       1.            0.            0.            0.      
    7  -0.290532          1.            0.            0.      
    8       0.       -0.292202          1.            0.      
    9  -0.290532          0.       -0.292601          1.      
 
 
  Factor U:
 
  Col:        1             2             3             4             5       
  Row
  ---
    1       4.           -1.            0.           -1.            0.      
    2       0.         3.75000         -1.            0.           -1.      
    3       0.            0.         3.73333         -1.            0.      
    4       0.            0.            0.         3.48214         -1.      
    5       0.            0.            0.            0.         3.44615    
    6       0.            0.            0.            0.            0.      
    7       0.            0.            0.            0.            0.      
    8       0.            0.            0.            0.            0.      
    9       0.            0.            0.            0.            0.      
 
  Col:        6             7             8             9       
  Row
  ---
    1       0.            0.            0.            0.      
    2       0.            0.            0.            0.      
    3      -1.            0.            0.            0.      
    4       0.           -1.            0.            0.      
    5      -1.            0.           -1.            0.      
    6    3.44196         -1.            0.           -1.      
    7       0.         3.42229         -1.            0.      
    8       0.            0.         3.41762         -1.      
    9       0.            0.            0.         3.41687    
 
 
  Product L*U:
 
  Col:        1             2             3             4             5       
  Row
  ---
    1       4.           -1.            0.           -1.            0.      
    2      -1.            4.           -1.        0.250000         -1.      
    3       0.           -1.            4.           -1.        0.266667    
    4      -1.        0.250000         -1.            4.           -1.      
    5       0.           -1.        0.266667         -1.            4.      
    6       0.            0.           -1.        0.267857         -1.      
    7       0.            0.            0.           -1.        0.287179    
    8       0.            0.            0.            0.           -1.      
    9       0.            0.            0.            0.            0.      
 
  Col:        6             7             8             9       
  Row
  ---
    1       0.            0.            0.            0.      
    2       0.            0.            0.            0.      
    3      -1.            0.            0.            0.      
    4   0.267857         -1.            0.            0.      
    5      -1.        0.287179         -1.            0.      
    6       4.           -1.        0.290179         -1.      
    7      -1.            4.           -1.        0.290532    
    8   0.290179         -1.            4.           -1.      
    9      -1.        0.290532      -1.00000          4.      
 
 
TEST317
  For a matrix in general storage,
  R8GE_INDICATOR sets up the indicator matrix.
 
  Matrix rows M =           7
  Matrix columns N =        5
 
  The R8GE indicator matrix:
 
  Col:        1             2             3             4             5       
  Row
  ---
    1      11.           12.           13.           14.           15.      
    2      21.           22.           23.           24.           25.      
    3      31.           32.           33.           34.           35.      
    4      41.           42.           43.           44.           45.      
    5      51.           52.           53.           54.           55.      
    6      61.           62.           63.           64.           65.      
    7      71.           72.           73.           74.           75.      
 
 
TEST32
  For a matrix in general storage,
  R8GE_NP_FA computes the LU factors without pivoting,
  R8GE_NP_SL solves factored systems.
 
  Matrix order N =       10
 
  Solution:
 
       1        1.000000
       2        1.000000
       3        1.000000
       4        1.000000
       5        1.000000
       6        1.000000
       7        1.000000
       8        1.000000
       9        1.000000
      10        1.000000
 
  Solution:
 
       1   1.00000    
       2   2.00000    
       3   3.00000    
       4   4.00000    
       5   5.00000    
       6   6.00000    
       7   7.00000    
       8   8.00000    
       9   9.00000    
      10   10.0000    
 
  Solution of transposed system:
 
       1   1.00000    
       2   2.00000    
       3   3.00000    
       4   4.00000    
       5   5.00000    
       6   6.00000    
       7   7.00000    
       8   8.00000    
       9   9.00000    
      10   10.0000    
 
TEST33
  For a matrix in general storage,
  R8GE_NP_FA computes LU factors without pivoting,
  R8GE_NP_INVERSE computes the inverse.
 
  Matrix order N =        5
 
  The random matrix:
 
  Col:        1             2             3             4             5       
  Row
  ---
    1   0.218418      0.661187E-01  0.617272E-01  0.183837E-02  0.859097    
    2   0.956318      0.257578      0.449539      0.897504      0.840847    
    3   0.829509      0.109957      0.401306      0.350752      0.123104    
    4   0.561695      0.438290E-01  0.754673      0.945448E-01  0.751236E-02
    5   0.415307      0.633966      0.797287      0.136169E-01  0.260303    
 
 
  The inverse matrix:
 
  Col:        1             2             3             4             5       
  Row
  ---
    1   0.625209      -1.02220       2.84978     -0.868794     -0.840984E-01
    2  -0.471548     -0.149728      0.892032      -2.12070       1.67928    
    3  -0.274368      0.546937      -1.95265       2.05705      0.285593E-02
    4   -1.39029       1.75848      -1.70625      0.283212     -0.293107    
    5    1.06404      0.228349     -0.649235      0.235691     -0.107439    
 
 
  The product:
 
  Col:        1             2             3             4             5       
  Row
  ---
    1    1.00000     -0.609629E-15  0.155646E-16 -0.547859E-16  0.909932E-18
    2   0.983040E-14   1.00000     -0.195697E-16 -0.258978E-16 -0.608720E-16
    3   0.376458E-14 -0.874850E-15   1.00000     -0.704423E-16  0.556103E-16
    4   0.366761E-14 -0.823009E-15 -0.426339E-15   1.00000      0.736610E-16
    5   0.247663E-13 -0.420728E-14 -0.121373E-14 -0.423805E-15   1.00000    
 
 
TEST34
  For a matrix in general storage,
  R8GE_FS factors and solves a linear system.
 
  Matrix order N =       10
 
  Solution:
 
       1   1.00000    
       2   2.00000    
       3   3.00000    
       4   4.00000    
       5   5.00000    
       6   6.00000    
       7   7.00000    
       8   8.00000    
       9   9.00000    
      10   10.0000    
 
TEST345
  For a matrix in general storage,
  R8GE_FSS factors and solves multiple linear system.
 
  Matrix order N =       10
 
  Solutions:
 
  Col         1             2             3       
  Row
 
    1    1.00000       1.00000       1.00000    
    2    1.00000       2.00000       2.00000    
    3    1.00000       3.00000       3.00000    
    4    1.00000       4.00000       1.00000    
    5    1.00000       5.00000       2.00000    
    6    1.00000       6.00000       3.00000    
    7    1.00000       7.00000       1.00000    
    8    1.00000       8.00000       2.00000    
    9    1.00000       9.00000       3.00000    
   10    1.00000       10.0000       1.00000    
 
 
TEST35
  For a matrix in general storage,
  R8GE_INVERSE computes the inverse matrix.
 
  Matrix order N =        4
 
  Matrix A:
 
  Col:        1             2             3             4       
  Row
  ---
    1       5.            3.            3.            3.      
    2       3.            5.            3.            3.      
    3       3.            3.            5.            3.      
    4       3.            3.            3.            5.      
 
 
  Inverse matrix B:
 
  Col:        1             2             3             4       
  Row
  ---
    1   0.392857     -0.107143     -0.107143     -0.107143    
    2  -0.107143      0.392857     -0.107143     -0.107143    
    3  -0.107143     -0.107143      0.392857     -0.107143    
    4  -0.107143     -0.107143     -0.107143      0.392857    
 
 
  Product matrix:
 
  Col:        1             2             3             4       
  Row
  ---
    1    1.00000     -0.249800E-15 -0.693889E-16 -0.555112E-16
    2   0.360822E-15   1.00000     -0.693889E-16 -0.555112E-16
    3   0.471845E-15 -0.249800E-15      1.        0.166533E-15
    4   0.416334E-15 -0.194289E-15 -0.971445E-16      1.      
 
 
TEST36
  For a matrix in general storage,
  R8GE_ML computes A*x or A'*X
    where A has been factored by R8GE_FA.
 
  Matrix order N =       10
 
  A*x and PLU*x
 
       1     32.6597         32.6597    
       2     30.7617         30.7617    
       3     20.1730         20.1730    
       4     24.1126         24.1126    
       5     30.7597         30.7597    
       6     32.7342         32.7342    
       7     28.0252         28.0252    
       8     28.3091         28.3091    
       9     28.7501         28.7501    
      10     17.3141         17.3141    
 
  A'*x and (PLU)'*x
 
       1     29.5180         29.5180    
       2     34.2533         34.2533    
       3     29.9813         29.9813    
       4     25.9818         25.9818    
       5     28.7133         28.7133    
       6     28.3730         28.3730    
       7     33.4872         33.4872    
       8     26.6124         26.6124    
       9     24.8414         24.8414    
      10     26.5390         26.5390    
 
TEST37
  For a matrix in general storage,
  R8GE_NP_ML computes A*x or A'*X
    where A has been factored by R8GE_NP_FA.
 
  Matrix order N =       10
 
  A*x and PLU*x
 
       1     32.6597         32.6597    
       2     30.7617         30.7617    
       3     20.1730         20.1730    
       4     24.1126         24.1126    
       5     30.7597         30.7597    
       6     32.7342         32.7342    
       7     28.0252         28.0252    
       8     28.3091         28.3091    
       9     28.7501         28.7501    
      10     17.3141         17.3141    
 
  A'*x and (PLU)'*x
 
       1     29.5180         29.5180    
       2     34.2533         34.2533    
       3     29.9813         29.9813    
       4     25.9818         25.9818    
       5     28.7133         28.7133    
       6     28.3730         28.3730    
       7     33.4872         33.4872    
       8     26.6124         26.6124    
       9     24.8414         24.8414    
      10     26.5390         26.5390    
 
TEST38
  For a matrix in general storage,
  R8GE_MU computes A*x or A'*X
    where A has been factored by R8GE_TRF.
 
  Matrix rows M =           5
  Matrix columns N =        3
 
  A*x and PLU*x
 
       1    0.535837        0.535837    
       2     2.82009         2.82009    
       3     2.25334         2.25334    
       4     2.91337         2.91337    
       5     4.07510         4.07510    
 
  A'*x and (PLU)'*x
 
       1     3.29537         3.29537    
       2     4.24167         4.24167    
       3     6.82191         6.82191    
 
  Matrix is        3 by        5
 
  A*x and PLU*x
 
       1     5.99380         5.99380    
       2     8.77520         8.77520    
       3     5.78077         5.78077    
 
  A'*x and (PLU)'*x
 
       1     1.84787         1.84787    
       2     2.65991         2.65991    
       3     3.22133         3.22133    
       4     4.06077         4.06077    
       5     3.50791         3.50791    
 
TEST385
  For a matrix in general storage,
  R8GE_PLU returns the PLU factors of a matrix.
 
  Matrix rows M =           5
  Matrix columns N =        4
 
  Matrix A:
 
  Col:        1             2             3             4       
  Row
  ---
    1   0.218418      0.661187E-01  0.617272E-01  0.183837E-02
    2   0.956318      0.257578      0.449539      0.897504    
    3   0.829509      0.109957      0.401306      0.350752    
    4   0.561695      0.438290E-01  0.754673      0.945448E-01
    5   0.415307      0.633966      0.797287      0.136169E-01
 
 
  Factor P:
 
  Col:        1             2             3             4             5       
  Row
  ---
    1       0.            0.            0.            0.            1.      
    2       1.            0.            0.            0.            0.      
    3       0.            0.            0.            1.            0.      
    4       0.            0.            1.            0.            0.      
    5       0.            1.            0.            0.            0.      
 
 
  Factor L:
 
  Col:        1             2             3             4             5       
  Row
  ---
    1       1.            0.            0.            0.            0.      
    2   0.434277          1.            0.            0.            0.      
    3   0.587352     -0.205820          1.            0.            0.      
    4   0.867399     -0.217324      0.231419          1.            0.      
    5   0.228395      0.139612E-01 -0.803036E-01  0.610161          1.      
 
 
  Factor U:
 
  Col:        1             2             3             4       
  Row
  ---
    1   0.956318      0.257578      0.449539      0.897504    
    2       0.        0.522106      0.602062     -0.376149    
    3       0.            0.        0.614552     -0.510026    
    4       0.            0.            0.       -0.391459    
    5       0.            0.            0.            0.      
 
 
  Product P*L*U:
 
  Col:        1             2             3             4       
  Row
  ---
    1   0.218418      0.661187E-01  0.617272E-01  0.183837E-02
    2   0.956318      0.257578      0.449539      0.897504    
    3   0.829509      0.109957      0.401306      0.350752    
    4   0.561695      0.438290E-01  0.754673      0.945448E-01
    5   0.415307      0.633966      0.797287      0.136169E-01
 
 
TEST39
  For a matrix in general storage,
  R8GE_POLY computes the characteristic polynomial.
 
  Matrix order N =       12
 
I, P(I), True P(I)
 
       1     1.00000         1.00000    
       2    -23.0000        -23.0000    
       3     231.000         231.000    
       4    -1330.00        -1330.00    
       5     4845.00         4845.00    
       6    -11628.0        -11628.0    
       7     18564.0         18564.0    
       8    -19448.0        -19448.0    
......  ..............  ..............
      13     1.00000         1.00000    
 
TEST40
  For a matrix in general storage,
  R8GE_SL_IT applies one step of iterative 
    refinement to an R8GE_SL solution.
 
  Matrix order N =        6
 
  i, x, b-A*x
 
       1    0.166667        0.344169E-13
       2    0.142857       -0.293543E-12
       3    0.125000        0.478328E-11
       4    0.111111        0.664713E-11
       5    0.100000        0.707390E-11
       6    0.909091E-01    0.808242E-13
 
Iterative refinement step        1
 
 
  I, DX:
 
       1        0.000000
       2        0.000000
       3        0.000000
       4        0.000000
       5        0.000000
       6        0.000000
 
  i, x, b-A*x
 
       1    0.166667        0.744405E-13
       2    0.142857       -0.755285E-12
       3    0.125000       -0.198896E-11
       4    0.111111       -0.335012E-10
       5    0.100000        0.130906E-11
       6    0.909091E-01   -0.488920E-11
 
Iterative refinement step        2
 
 
  I, DX:
 
       1       -0.000000
       2       -0.000000
       3       -0.000000
       4       -0.000000
       5       -0.000000
       6       -0.000000
 
  i, x, b-A*x
 
       1    0.166667       -0.629496E-13
       2    0.142857       -0.123790E-11
       3    0.125000        0.113938E-10
       4    0.111111       -0.206821E-10
       5    0.100000        0.632852E-10
       6    0.909091E-01   -0.494138E-11
 
Iterative refinement step        3
 
 
  I, DX:
 
       1        0.000000
       2        0.000000
       3        0.000000
       4        0.000000
       5        0.000000
       6        0.000000
 
  i, x, b-A*x
 
       1    0.166667       -0.153211E-13
       2    0.142857        0.279021E-11
       3    0.125000       -0.204410E-10
       4    0.111111        0.254055E-10
       5    0.100000       -0.540470E-10
       6    0.909091E-01    0.124611E-11
 
Iterative refinement step        4
 
 
  I, DX:
 
       1       -0.000000
       2       -0.000000
       3       -0.000000
       4       -0.000000
       5       -0.000000
       6       -0.000000
 
  i, x, b-A*x
 
       1    0.166667       -0.895950E-13
       2    0.142857        0.812017E-12
       3    0.125000       -0.841260E-11
       4    0.111111        0.224336E-10
       5    0.100000       -0.325138E-10
       6    0.909091E-01    0.115503E-10
 
Iterative refinement step        5
 
 
  I, DX:
 
       1       -0.000000
       2       -0.000000
       3       -0.000000
       4       -0.000000
       5       -0.000000
       6       -0.000000
 
  i, x, b-A*x
 
       1    0.166667       -0.582867E-14
       2    0.142857        0.222122E-11
       3    0.125000       -0.871525E-13
       4    0.111111        0.487388E-10
       5    0.100000       -0.753742E-11
       6    0.909091E-01    0.146565E-10
 
TEST41
  For a matrix in general storage,
  R8GE_TRF computes the LU factors,
  R8GE_TRS solves a factored system.
 
  Number of matrix rows M =           5
  Number of matrix columns N =        5
 
  Solution:
 
       1   1.00000    
       2   2.00000    
       3   3.00000    
       4   4.00000    
       5   5.00000    
 
  Solution to transposed system:
 
       1   1.00000    
       2   2.00000    
       3   3.00000    
       4   4.00000    
       5   5.00000    
 
TEST42
  For a matrix in general storage,
  R8GE_NP_TRF factors without pivoting,
  R8GE_NP_TRS solves factored systems.
  R8GE_NP_TRM computes A*X for factored A.
 
  Matrix rows M =          10
  Matrix columns N =       10
 
  Solution:
 
       1   1.00000    
       2   1.00000    
       3   1.00000    
       4   1.00000    
       5   1.00000    
       6   1.00000    
       7   1.00000    
       8   1.00000    
       9   1.00000    
      10   1.00000    
 
  Solution:
 
       1   1.00000    
       2   2.00000    
       3   3.00000    
       4   4.00000    
       5   5.00000    
       6   6.00000    
       7   7.00000    
       8   8.00000    
       9   9.00000    
      10   10.0000    
 
  Solution of transposed system:
 
       1   1.00000    
       2   2.00000    
       3   3.00000    
       4   4.00000    
       5   5.00000    
       6   6.00000    
       7   7.00000    
       8   8.00000    
       9   9.00000    
      10   10.0000    
 
TEST422
  For a matrix in the R8CC format,
  (double precision Harwell-Boeing Unsymmetric Assembled)
  R8CC_GET gets an entry;
  R8CC_IJK gets K from (I,J)
  R8CC_INC increments an entry;
  R8CC_KIJ gets (I,J) from K;
  R8CC_SET sets an entry;
 
  Matrix rows M     =        5
  Matrix columns N  =        5
  Nonzeros NZ_NUM   =       12
 
  The COLPTR vector:
 
       1    1
       2    4
       3    6
       4    8
       5   10
       6   13
 
  The ROWIND vector:
 
       1    1
       2    2
       3    4
       4    1
       5    2
       6    3
       7    5
       8    4
       9    5
      10    1
      11    2
      12    5
 
  The initial R8CC matrix:
 
  Col:        1             2             3             4             5       
  Row
  ---
    1   0.218418      0.561695          0.            0.        0.633966    
    2   0.956318      0.415307          0.            0.        0.617272E-01
    3       0.            0.        0.661187E-01      0.            0.      
    4   0.829509          0.            0.        0.109957          0.      
    5       0.            0.        0.257578      0.438290E-01  0.449539    
 
 
  R8CC_IJK locates some (I,J) entries.
 
         I         J         K
 
         3         4        -1
         4         1         3
         5         2        -1
         1         1         1
         5         5        12
         1         1         1
         2         5        11
         1         2         4
         5         2        -1
         4         3        -1
         5         3         7
         5         3         7
         1         4        -1
         2         1         2
         3         2        -1
         4         2        -1
         2         4        -1
         1         2         4
         5         5        12
         1         4        -1
 
  R8CC_KIJ locates some K entries.
 
         K         I         J
 
         2         2         1
        10         1         5
         9         5         4
         4         1         2
        11         2         5
        10         1         5
        10         1         5
         5         2         2
        12         5         5
         7         5         3
         1         1         1
         7         5         3
         1         1         1
         5         2         2
         4         1         2
        11         2         5
         1         1         1
         1         1         1
         2         2         1
         2         2         1
 
  R8CC_SET sets 10 entries at random.
 
         I         J         K      NEW_VALUE
 
         2         2         5     101.000    
         2         1         2     102.000    
         4         1         3     103.000    
         4         1         3     104.000    
         4         4         8     105.000    
         1         5        10     106.000    
         4         4         8     107.000    
         4         1         3     108.000    
         1         5        10     109.000    
         5         4         9     110.000    
 
  R8CC_INC increments 10 entries at random.
 
         I         J         K       NEW_VALUE
 
         3         3         6     21.0661    
         2         5        11     22.0617    
         5         5        12     23.4495    
         2         5        11     46.0617    
         5         3         7     25.2576    
         1         1         1     26.2184    
         3         3         6     48.0661    
         1         2         4     28.5617    
         2         5        11     75.0617    
         5         4         9     140.000    
 
  R8CC_GET retrieves 10 entries.
 
         I         J         K      VALUE
 
         2         2         5     101.000    
         2         1         2     102.000    
         1         5        10     109.000    
         5         5        12     23.4495    
         5         4         9     140.000    
         3         3         6     48.0661    
         4         4         8     107.000    
         2         2         5     101.000    
         5         3         7     25.2576    
         1         5        10     109.000    
 
  The final R8CC matrix:
 
  Col:        1             2             3             4             5       
  Row
  ---
    1    26.2184       28.5617          0.            0.          109.      
    2     102.          101.            0.            0.         75.0617    
    3       0.            0.         48.0661          0.            0.      
    4     108.            0.            0.          107.            0.      
    5       0.            0.         25.2576        140.         23.4495    
 
 
TEST423
  For a matrix in the R8CC format,
  (double precision Harwell-Boeing Unsymmetric Assembled)
  R8CC_INDICATOR sets up the indicator matrix;
 
  Matrix rows M     =        5
  Matrix columns N  =        5
  Nonzeros NZ_NUM   =       12
 
  The R8CC indicator matrix:
 
  Col:        1             2             3             4             5       
  Row
  ---
    1      11.           12.            0.            0.           15.      
    2      21.           22.            0.            0.           25.      
    3       0.            0.           33.            0.            0.      
    4      41.            0.            0.           44.            0.      
    5       0.            0.           53.           54.           55.      
 
 
TEST425
  For a matrix in the R8CC format,
  (double precision Harwell-Boeing Unsymmetric Assembled)
  R8CC_MXV multiplies an R8CC matrix by a vector;
  R8CC_VXM multiplies a vector by an R8CC matrix;
 
  Matrix rows M     =        5
  Matrix columns N  =        5
  Nonzeros NZ_NUM   =       12
 
  The R8CC matrix, in R8GE form:
 
  Col:        1             2             3             4             5       
  Row
  ---
    1   0.218418      0.561695          0.            0.        0.633966    
    2   0.956318      0.415307          0.            0.        0.617272E-01
    3       0.            0.        0.661187E-01      0.            0.      
    4   0.829509          0.            0.        0.109957          0.      
    5       0.            0.        0.257578      0.438290E-01  0.449539    
 
 
  The vector xn:
 
       1   1.00000    
       2   0.00000    
       3   0.00000    
       4   0.00000    
       5  -1.00000    
 
  The product A * xn:
 
       1 -0.415547    
       2  0.894590    
       3   0.00000    
       4  0.829509    
       5 -0.449539    
 
  The product A' * xm:
 
       1  0.436837    
       2   1.12339    
       3 -0.772733    
       4 -0.131487    
       5 -0.806855E-01
 
TEST426
  For a matrix in the R8CC format,
  (double precision Harwell-Boeing Unsymmetric Assembled)
  R8CC_PRINT prints the matrix.
 
  Matrix rows M     =        5
  Matrix columns N  =        5
  Nonzeros NZ_NUM   =       12
 
  The R8CC matrix:
 
  Col:        1             2             3             4             5       
  Row
  ---
    1   0.218418      0.561695          0.            0.        0.633966    
    2   0.956318      0.415307          0.            0.        0.617272E-01
    3       0.            0.        0.661187E-01      0.            0.      
    4   0.829509          0.            0.        0.109957          0.      
    5       0.            0.        0.257578      0.438290E-01  0.449539    
 
 
TEST428
  For a matrix in lower triangular storage,
  R8LT_INDICATOR sets up an indicator matrix;
 
  Matrix rows M =           6
  Matrix columns N =        5
 
  The SLT indicator matrix:
 
  Col:       1             2             3             4             5       
  Row
  ---
    1      11.                                                              
    2      21.           22.                                                
    3      31.           32.           33.                                  
    4      41.           42.           43.           44.                    
    5      51.           52.           53.           54.           55.      
    6      61.           62.           63.           64.           65.      
 
 
TEST43
  For a matrix in lower triangular storage,
  R8LT_SL solves systems;
  R8LT_MXV computes matrix-vector products;
  R8LT_VXM computes vector-matrix products;
 
  Matrix order N =       10
 
  The lower triangular matrix:
 
  Col:       1             2             3             4             5       
  Row
  ---
    1       1.                                                              
    2       1.            2.                                                
    3       1.            2.            3.                                  
    4       1.            2.            3.            4.                    
    5       1.            2.            3.            4.            5.      
    6       1.            2.            3.            4.            5.      
    7       1.            2.            3.            4.            5.      
    8       1.            2.            3.            4.            5.      
    9       1.            2.            3.            4.            5.      
   10       1.            2.            3.            4.            5.      
 
  Col:       6             7             8             9            10       
  Row
  ---
    6       6.                                                              
    7       6.            7.                                                
    8       6.            7.            8.                                  
    9       6.            7.            8.            9.                    
   10       6.            7.            8.            9.           10.      
 
 
  Solution:
 
       1   1.00000    
       2   2.00000    
       3   3.00000    
       4   4.00000    
       5   5.00000    
       6   6.00000    
       7   7.00000    
       8   8.00000    
       9   9.00000    
      10   10.0000    
 
  Solution to the transposed system:
 
       1   1.00000    
       2   2.00000    
       3   3.00000    
       4   4.00000    
       5   5.00000    
       6   6.00000    
       7   7.00000    
       8   8.00000    
       9   9.00000    
      10   10.0000    
 
TEST44
  For a matrix in lower triangular storage,
  R8LT_DET computes the determinant.
  R8LT_INVERSE computes the inverse.
  R8LT_MXM computes matrix products.
  R8LT_RANDOM sets a random value.
 
  Matrix order N =        5
 
  Matrix A:
 
  Col:       1             2             3             4             5       
  Row
  ---
    1   0.218418                                                            
    2   0.956318      0.829509                                              
    3   0.561695      0.415307      0.661187E-01                            
    4   0.257578      0.109957      0.438290E-01  0.633966                  
    5   0.617272E-01  0.449539      0.401306      0.754673      0.797287    
 
 
  Determinant is   0.605501E-02
 
  Inverse matrix B:
 
  Col:       1             2             3             4             5       
  Row
  ---
    1    4.57837                                                            
    2   -5.27827       1.20553                                              
    3   -5.74037      -7.57223       15.1243                                
    4  -0.547837      0.314412      -1.04561       1.57737                  
    5    6.02953       2.83407      -6.62294      -1.49306       1.25425    
 
 
  Product A * B:
 
  Col:       1             2             3             4             5       
  Row
  ---
    1       1.                                                              
    2       0.            1.                                                
    3       0.            0.            1.                                  
    4   0.555112E-16      0.        0.111022E-15      1.                    
    5       0.            0.            0.            0.            1.      
 
 
TEST443
  R8NCF_INDICATOR sets up a R8NCF indicator matrix;
 
  Matrix rows M =           7
  Matrix columns N =        5
  Matrix nonzeros =        15
 
  The R8NCF indicator matrix:
 
  Col:        1             2             3             4             5       
  Row
  ---
    1      11.           12.            0.           14.            0.      
    2      21.           22.            0.           24.            0.      
    3       0.            0.           33.           34.            0.      
    4       0.            0.            0.           44.           45.      
    5      51.           52.            0.            0.           55.      
 
 
TEST445
  R8PBL_INDICATOR sets up an R8PBL indicator matrix.
 
  Matrix order N =        9
  Bandwidth MU =          3
 
  The R8PBL indicator matrix:
 
  Col:       1             2             3             4             5       
  Row
  ---
    1      11.           21.           31.           41.                    
    2      21.           22.           32.           42.           52.      
    3      31.           32.           33.           43.           53.      
    4      41.           42.           43.           44.           54.      
    5                    52.           53.           54.           55.      
    6                                  63.           64.           65.      
    7                                                74.           75.      
    8                                                              85.      
 
  Col:       6             7             8             9       
  Row
  ---
    3      63.                                                
    4      64.           74.                                  
    5      65.           75.           85.                    
    6      66.           76.           86.           96.      
    7      76.           77.           87.           97.      
    8      86.           87.           88.           98.      
    9      96.           97.           98.           99.      
 
 
TEST45
  R8PBU_CG applies the conjugate gradient method
    to a symmetric positive definite banded 
    linear system.
 
  Matrix order N =           50
  Upper bandwidth MU =        1
 
The symmetric banded matrix:
 
  Col:       1             2             3             4             5       
  Row
  ---
    1       2.           -1.                                                
    2      -1.            2.           -1.                                  
    3                    -1.            2.           -1.                    
    4                                  -1.            2.           -1.      
    5                                                -1.            2.      
    6                                                              -1.      
 
  Col:       6             7             8             9            10       
  Row
  ---
    5      -1.                                                              
    6       2.           -1.                                                
    7      -1.            2.           -1.                                  
    8                    -1.            2.           -1.                    
    9                                  -1.            2.           -1.      
   10                                                -1.            2.      
 
 
  Solution:
 
       1        1.000000
       2        2.000000
       3        3.000000
       4        4.000000
       5        5.000000
       6        6.000000
       7        7.000000
       8        8.000000
......  ..............
      50       50.000000
 
  Maximum residual =   0.568434E-13
 
TEST46
  R8PBU_DET, determinant of a positive definite
    symmetric banded matrix.
 
  Matrix order N =           10
  Upper bandwidth MU =        3
 
  The R8PBU matrix:
 
  Col:       1             2             3             4             5       
  Row
  ---
    1    2.53856      0.218418      0.956318      0.829509                  
    2   0.218418       2.43180      0.561695      0.415307      0.661187E-01
    3   0.956318      0.561695       2.15981      0.257578      0.109957    
    4   0.829509      0.415307      0.257578       3.59212      0.633966    
    5                 0.661187E-01  0.109957      0.633966       5.05543    
    6                               0.438290E-01  0.617272E-01  0.401306    
    7                                             0.449539      0.754673    
    8                                                           0.797287    
 
  Col:       6             7             8             9            10       
  Row
  ---
    3   0.438290E-01                                                        
    4   0.617272E-01  0.449539                                              
    5   0.401306      0.754673      0.797287                                
    6    2.23897      0.183837E-02  0.897504      0.350752                  
    7   0.183837E-02   3.69430      0.945448E-01  0.136169E-01  0.859097    
    8   0.897504      0.945448E-01   4.31532      0.840847      0.123104    
    9   0.350752      0.136169E-01  0.840847       2.27576      0.751236E-02
   10                 0.859097      0.123104      0.751236E-02   1.45338    
 
 
  The R8PBU factored matrix:
 
  Col:       1             2             3             4             5       
  Row
  ---
    1    1.59329      0.137087      0.600217      0.520628                  
    2   0.137087       1.55339      0.308625      0.221411      0.425643E-01
    3   0.600217      0.308625       1.30549     -0.944052E-01  0.741640E-01
    4   0.520628      0.221411     -0.944052E-01   1.80641      0.349611    
    5                 0.425643E-01  0.741640E-01  0.349611       2.21943    
    6                               0.335728E-01  0.359257E-01  0.174034    
    7                                             0.248857      0.300829    
    8                                                           0.359230    
 
  Col:       6             7             8             9            10       
  Row
  ---
    3   0.335728E-01                                                        
    4   0.359257E-01  0.248857                                              
    5   0.174034      0.300829      0.359230                                
    6    1.48535     -0.400285E-01  0.562148      0.236141                  
    7  -0.400285E-01   1.88156      0.477260E-02  0.122607E-01  0.456587    
    8   0.562148      0.477260E-02   1.96729      0.359907      0.614676E-01
    9   0.236141      0.122607E-01  0.359907       1.44579     -0.139773E-01
   10                 0.456587      0.614676E-01 -0.139773E-01   1.11397    
 
 
  R8PBU_DET computes the determinant =    13158.4    
  R8GE_DET computes the determinant =     13158.4    
 
TEST47
  For a banded positive definite symmetric matrix,
  R8PBU_FA computes the LU factors.
  R8PBU_RANDOM sets a random value.
  R8PBU_SL solves a linear system.
 
  Matrix order N =           50
  Upper bandwidth MU =        1
 
 
  Solution:
 
       1        1.000000
       2        2.000000
       3        3.000000
       4        4.000000
       5        5.000000
       6        6.000000
       7        7.000000
       8        8.000000
......  ..............
      50       50.000000
 
TEST48
  R8PBU_ML computes A*x 
    where A has been factored by R8PBU_FA.
 
  Matrix order N =           10
  Upper bandwidth MU =        3
 
  A*x and PLU*x
 
       1     9.16239         9.16239    
       2     8.75892         8.75892    
       3     10.4022         10.4022    
       4     23.4883         23.4883    
       5     42.3440         42.3440    
       6     26.1684         26.1684    
       7     40.9126         40.9126    
       8     53.3545         53.3545    
       9     29.4836         29.4836    
      10     21.5999         21.5999    
 
TEST485
  R8PBU_INDICATOR sets up an R8PBU indicator matrix.
 
  Matrix order N =        9
  Bandwidth MU =          3
 
  The R8PBU indicator matrix:
 
  Col:       1             2             3             4             5       
  Row
  ---
    1      11.           12.           13.           14.                    
    2      12.           22.           23.           24.           25.      
    3      13.           23.           33.           34.           35.      
    4      14.           24.           34.           44.           45.      
    5                    25.           35.           45.           55.      
    6                                  36.           46.           56.      
    7                                                47.           57.      
    8                                                              58.      
 
  Col:       6             7             8             9       
  Row
  ---
    3      36.                                                
    4      46.           47.                                  
    5      56.           57.           58.                    
    6      66.           67.           68.           69.      
    7      67.           77.           78.           79.      
    8      68.           78.           88.           89.      
    9      69.           79.           89.           99.      
 
 
TEST49
  R8PBU_SOR, SOR routine for iterative
    solution of A*x=b.
 
  Matrix order N =           50
  Upper bandwidth MU =        1
 
  SOR iteration.
 
  Relaxation factor OMEGA =   0.250000    
  Iterations taken =     5081
 
  Solution:
 
       1        0.001623
       2        0.067310
       3        0.132722
       4        0.197589
       5        0.261647
       6        0.324632
       7        0.386286
       8        0.446356
......  ..............
      50        0.001623
 
  Maximum error =   0.999603E-04
 
  SOR iteration.
 
  Relaxation factor OMEGA =   0.750000    
  Iterations taken =     1693
 
  Solution:
 
       1        0.001623
       2        0.067309
       3        0.132721
       4        0.197588
       5        0.261645
       6        0.324630
       7        0.386284
       8        0.446354
......  ..............
      50        0.001623
 
  Maximum error =   0.999408E-04
 
  SOR iteration.
 
  Relaxation factor OMEGA =    1.00000    
  Iterations taken =     1269
 
  Solution:
 
       1        0.001624
       2        0.067312
       3        0.132725
       4        0.197593
       5        0.261652
       6        0.324638
       7        0.386293
       8        0.446365
......  ..............
      50        0.001624
 
  Maximum error =   0.999855E-04
 
TEST50
  R8PO_FA factors a positive definite symmetric
    linear system,
  R8PO_SL solves a factored system.
 
  Matrix order N =       10
 
  Solution:
 
       1   1.00000    
       2   2.00000    
       3   3.00000    
       4   4.00000    
       5   5.00000    
       6   6.00000    
       7   7.00000    
       8   8.00000    
       9   9.00000    
      10   10.0000    
 
  Solution:
 
       1   1.00000    
       2   1.00000    
       3   1.00000    
       4   1.00000    
       5   1.00000    
       6   1.00000    
       7   1.00000    
       8   1.00000    
       9   1.00000    
      10   1.00000    
 
TEST505
  R8PO_FA factors a positive definite symmetric
    linear system,
 
  Matrix order N =        5
 
  The matrix A:
 
  Col:        1             2             3             4             5       
  Row
  ---
    1       1.            1.            1.            1.            1.      
    2       1.            2.            2.            2.            2.      
    3       1.            2.            3.            3.            3.      
    4       1.            2.            3.            4.            4.      
    5       1.            2.            3.            4.            5.      
 
 
  The factor R (an R8UT matrix):
 
  Col:       1             2             3             4             5       
  Row
  ---
    1       1.            1.            1.            1.            1.      
    2                     1.            1.            1.            1.      
    3                                   1.            1.            1.      
    4                                                 1.            1.      
    5                                                               1.      
 
 
  The product R' * R:
 
  Col:        1             2             3             4             5       
  Row
  ---
    1       1.            1.            1.            1.            1.      
    2       1.            2.            2.            2.            2.      
    3       1.            2.            3.            3.            3.      
    4       1.            2.            3.            4.            4.      
    5       1.            2.            3.            4.            5.      
 
 
TEST51
  For a symmetric positive definite matrix
    factored by R8PO_FA,
  R8PO_DET computes the determinant;
  R8PO_INVERSE computes the inverse.
 
  Matrix order N =        4
 
  Matrix A:
 
  Col:        1             2             3             4       
  Row
  ---
    1       1.            1.            1.            1.      
    2       1.            2.            2.            2.      
    3       1.            2.            3.            3.      
    4       1.            2.            3.            4.      
 
 
  Matrix determinant =    1.00000    
 
  Inverse matrix B:
 
  Col:        1             2             3             4       
  Row
  ---
    1       2.           -1.            0.           -0.      
    2      -1.            2.           -1.           -0.      
    3       0.           -1.            2.           -1.      
    4      -0.           -0.           -1.            1.      
 
 
  Product A * B:
 
  Col:        1             2             3             4       
  Row
  ---
    1       1.            0.            0.            0.      
    2       0.            1.            0.            0.      
    3       0.            0.            1.            0.      
    4       0.            0.            0.            1.      
 
 
TEST515
  For a positive definite symmetric matrix,
  R8PO_FA computes the Cholesky factor.
  R8PO_SL solves a factored linear system.
  R8PO_MXV multiplies unfactored A * x
  R8PO_ML multiplies factored A * x
 
  Matrix order N =        5
 
  The matrix A:
 
  Col:        1             2             3             4             5       
  Row
  ---
    1   0.381025E-02  0.277488E-01  0.247715E-01  0.465839E-01  0.492143E-01
    2   0.277488E-01  0.268432      0.208725      0.350545      0.521707    
    3   0.247715E-01  0.208725      0.488639      0.540951      0.426804    
    4   0.465839E-01  0.350545      0.540951       1.65848       1.45021    
    5   0.492143E-01  0.521707      0.426804       1.45021       1.77774    
 
 
  Right hand side, computed by R8PO_MXV
 
       1  0.566030    
       2   5.20150    
       3   6.20596    
       4   16.2555    
       5   17.0626    
 
  Solution (should be 1,2,3...)
 
       1   1.00000    
       2   2.00000    
       3   3.00000    
       4   4.00000    
       5   5.00000    
 
  Right hand side, computed by R8PO_ML
 
       1  0.566030    
       2   5.20150    
       3   6.20596    
       4   16.2555    
       5   17.0626    
 
  Solution (should be 1,2,3...)
 
       1   1.00000    
       2   2.00000    
       3   3.00000    
       4   4.00000    
       5   5.00000    
 
TEST517
  R8PO_INDICATOR sets up an R8PO indicator matrix.
 
  Matrix order N =        5
 
  The R8PO indicator matrix:
 
  Col:        1             2             3             4             5       
  Row
  ---
    1      11.           12.           13.           14.           15.      
    2      12.           22.           23.           24.           25.      
    3      13.           23.           33.           34.           35.      
    4      14.           24.           34.           44.           45.      
    5      15.           25.           35.           45.           55.      
 
 
TEST52
  R8PO_RANDOM computes a random positive definite
    symmetric matrix.
  R8PO_TO_R8GE converts an R8PO matrix to R8GE format.
 
  Matrix order N =        5
 
  The random R8PO matrix:
 
  Col:        1             2             3             4             5       
  Row
  ---
    1   0.381025E-02  0.277488E-01  0.247715E-01  0.465839E-01  0.492143E-01
    2   0.277488E-01  0.268432      0.208725      0.350545      0.521707    
    3   0.247715E-01  0.208725      0.488639      0.540951      0.426804    
    4   0.465839E-01  0.350545      0.540951       1.65848       1.45021    
    5   0.492143E-01  0.521707      0.426804       1.45021       1.77774    
 
 
  The random R8PO matrix (printed by R8GE_PRINT):
 
  Col:        1             2             3             4             5       
  Row
  ---
    1   0.381025E-02  0.277488E-01  0.247715E-01  0.465839E-01  0.492143E-01
    2       0.        0.268432      0.208725      0.350545      0.521707    
    3       0.            0.        0.488639      0.540951      0.426804    
    4       0.            0.            0.         1.65848       1.45021    
    5       0.            0.            0.            0.         1.77774    
 
 
  The random R8GE matrix (printed by R8GE_PRINT):
 
  Col:        1             2             3             4             5       
  Row
  ---
    1   0.381025E-02  0.277488E-01  0.247715E-01  0.465839E-01  0.492143E-01
    2   0.277488E-01  0.268432      0.208725      0.350545      0.521707    
    3   0.247715E-01  0.208725      0.488639      0.540951      0.426804    
    4   0.465839E-01  0.350545      0.540951       1.65848       1.45021    
    5   0.492143E-01  0.521707      0.426804       1.45021       1.77774    
 
 
TEST525
  R8PP_FA factors an R8PP system,
  R8PP_SL solves an R8PP system.
 
  Matrix order N =        5
 
  The R8PP matrix:
 
  Col:       1             2             3             4             5       
  Row
  ---
    1   0.381025E-02  0.277488E-01  0.247715E-01  0.465839E-01  0.492143E-01
    2   0.277488E-01  0.268432      0.208725      0.350545      0.521707    
    3   0.247715E-01  0.208725      0.488639      0.540951      0.426804    
    4   0.465839E-01  0.350545      0.540951       1.65848       1.45021    
    5   0.492143E-01  0.521707      0.426804       1.45021       1.77774    
 
 
  The desired solution:
 
       1   1.00000    
       2   2.00000    
       3   3.00000    
       4   4.00000    
       5   5.00000    
 
  The right hand side:
 
       1  0.566030    
       2   5.20150    
       3   6.20596    
       4   16.2555    
       5   17.0626    
 
  The R8PP matrix has been factored.
 
  Solution:
 
       1   1.00000    
       2   2.00000    
       3   3.00000    
       4   4.00000    
       5   5.00000    
 
TEST527
  R8PP_INDICATOR sets up an R8PP indicator matrix.
 
  Matrix order N =        5
 
  The R8PP indicator matrix:
 
  Col:       1             2             3             4             5       
  Row
  ---
    1      11.           12.           13.           14.           15.      
    2      12.           22.           23.           24.           25.      
    3      13.           23.           33.           34.           35.      
    4      14.           24.           34.           44.           45.      
    5      15.           25.           35.           45.           55.      
 
 
TEST53
  R8PP_RANDOM, compute a random positive definite
    symmetric packed matrix.
 
  Matrix order N =        5
 
  The matrix (printed by R8PP_PRINT):
 
  Col:       1             2             3             4             5       
  Row
  ---
    1   0.381025E-02  0.277488E-01  0.247715E-01  0.465839E-01  0.492143E-01
    2   0.277488E-01  0.268432      0.208725      0.350545      0.521707    
    3   0.247715E-01  0.208725      0.488639      0.540951      0.426804    
    4   0.465839E-01  0.350545      0.540951       1.65848       1.45021    
    5   0.492143E-01  0.521707      0.426804       1.45021       1.77774    
 
 
  The random R8PP matrix (printed by R8GE_PRINT):
 
  Col:        1             2             3             4             5       
  Row
  ---
    1   0.381025E-02  0.277488E-01  0.247715E-01  0.465839E-01  0.492143E-01
    2   0.277488E-01  0.268432      0.208725      0.350545      0.521707    
    3   0.247715E-01  0.208725      0.488639      0.540951      0.426804    
    4   0.465839E-01  0.350545      0.540951       1.65848       1.45021    
    5   0.492143E-01  0.521707      0.426804       1.45021       1.77774    
 
 
TEST531
  R8S3_INDICATOR sets up an R8S3 indicator matrix.
 
  Matrix order N =         6
  Matrix nonzeros =       20
 
  The R8S3 indicator matrix:
 
  Col:        1             2             3             4             5       
  Row
  ---
    1      11.            0.            0.            0.           15.      
    2       0.           22.            0.           24.            0.      
    3      31.            0.           33.            0.           35.      
    4      41.           42.           43.           44.            0.      
    5       0.            0.           53.            0.           55.      
    6      61.           62.            0.           64.            0.      
 
  Col:        6       
  Row
  ---
    2      26.      
    3      36.      
    4      46.      
    6      66.      
 
 
TEST532
  R8S3_DIAGONAL rearranges a square R8S3 matrix
  structure so that the diagonal is listed first.
 
  Matrix order N =         6
  Matrix nonzeros =       20
 
  Before rearrangement:
       K  ROW(K)  COL(K)      A(K)
 
         1         1         5     15.0000    
         2         3         6     36.0000    
         3         4         2     42.0000    
         4         6         2     62.0000    
         5         5         3     53.0000    
         6         2         4     24.0000    
         7         6         4     64.0000    
         8         3         5     35.0000    
         9         1         1     11.0000    
        10         2         6     26.0000    
        11         4         4     44.0000    
        12         6         6     66.0000    
        13         5         5     55.0000    
        14         4         1     41.0000    
        15         4         6     46.0000    
        16         3         3     33.0000    
        17         6         1     61.0000    
        18         2         2     22.0000    
        19         3         1     31.0000    
        20         4         3     43.0000    
 
  After rearrangement:
       K  ROW(K)  COL(K)      A(K)
 
         1         1         1     11.0000    
         2         2         2     22.0000    
         3         3         3     33.0000    
         4         4         4     44.0000    
         5         5         5     55.0000    
         6         6         6     66.0000    
         7         6         4     64.0000    
         8         3         5     35.0000    
         9         1         5     15.0000    
        10         2         6     26.0000    
        11         6         2     62.0000    
        12         2         4     24.0000    
        13         5         3     53.0000    
        14         4         1     41.0000    
        15         4         6     46.0000    
        16         4         2     42.0000    
        17         6         1     61.0000    
        18         3         6     36.0000    
        19         3         1     31.0000    
        20         4         3     43.0000    
 
TEST533
  For a R8S3 system,
  R8S3_JAC_SL solves a linear system using
    Jacobi iteration
 
  Matrix order N =           100
  Iterations per call =     1000
 
  Solving A * x = b.
 
 
  The right hand side:
 
       1         0
       2         0
       3         0
       4         0
       5         0
       6         0
       7         0
       8         0
......  ..............
     100       101
 
  Number of iterations taken =     1000
  Maximum solution change on last step =   0.488795E-01
 
  Current solution estimate:
 
       1        0.031082
       2        0.062164
       3        0.094395
       4        0.126625
       5        0.161175
       6        0.195725
       7        0.233812
       8        0.271898
......  ..............
     100       98.452273
 
  Number of iterations taken =     1000
  Maximum solution change on last step =   0.241583E-01
 
  Current solution estimate:
 
       1        0.281638
       2        0.563275
       3        0.847221
       4        1.131167
       5        1.419726
       6        1.708285
       7        2.003761
       8        2.299236
......  ..............
     100       99.198128
 
  Number of iterations taken =     1000
  Maximum solution change on last step =   0.145888E-01
 
  Current solution estimate:
 
       1        0.537777
       2        1.075555
       3        1.615051
       4        2.154547
       5        2.697476
       6        3.240404
       7        3.788467
       8        4.336530
......  ..............
     100       99.525559
 
  Solving A' * x = b.
 
 
  The right hand side:
 
       1         0
       2         0
       3         0
       4         0
       5         0
       6         0
       7         0
       8         0
......  ..............
     100       101
 
  Number of iterations taken =     1000
  Maximum solution change on last step =   0.488795E-01
 
  Current solution estimate:
 
       1        0.031082
       2        0.062164
       3        0.094395
       4        0.126625
       5        0.161175
       6        0.195725
       7        0.233812
       8        0.271898
......  ..............
     100       98.452273
 
  Number of iterations taken =     1000
  Maximum solution change on last step =   0.241583E-01
 
  Current solution estimate:
 
       1        0.281638
       2        0.563275
       3        0.847221
       4        1.131167
       5        1.419726
       6        1.708285
       7        2.003761
       8        2.299236
......  ..............
     100       99.198128
 
  Number of iterations taken =     1000
  Maximum solution change on last step =   0.145888E-01
 
  Current solution estimate:
 
       1        0.537777
       2        1.075555
       3        1.615051
       4        2.154547
       5        2.697476
       6        3.240404
       7        3.788467
       8        4.336530
......  ..............
     100       99.525559
 
TEST534
  For a R8S3 system,
  R8S3_WRITE writes the matrix to a file.
 
  Matrix order N =              100
  Matrix nonzeros NZ_NUM =      298
 
 
  Initial 10x10 block of R8S3 matrix:
 
  Col:        1             2             3             4             5       
  Row
  ---
    1     101.          102.            0.            0.            0.      
    2     201.          202.          203.            0.            0.      
    3       0.          302.          303.          304.            0.      
    4       0.            0.          403.          404.          405.      
    5       0.            0.            0.          504.          505.      
    6       0.            0.            0.            0.          605.      
 
  Col:        6             7             8             9            10       
  Row
  ---
    5     506.            0.            0.            0.            0.      
    6     606.          607.            0.            0.            0.      
    7     706.          707.          708.            0.            0.      
    8       0.          807.          808.          809.            0.      
    9       0.            0.          908.          909.          910.      
   10       0.            0.            0.         1009.         1010.      
 
 
  R8S3_WRITE wrote the matrix data to "r8s3_matrix.txt".
 
TEST535
  For a R8S3 system,
  R8S3_READ_SIZE reads the size of the matrix.
  R8S3_READ reads the matrix.
 
  R8S3_READ_SIZE reports matrix size data:
 
  Matrix order N =              100
  Matrix nonzeros NZ_NUM =      298
 
  Initial 10x10 block of recovered R8S3 matrix:
 
  Col:        1             2             3             4             5       
  Row
  ---
    1     101.          102.            0.            0.            0.      
    2     201.          202.          203.            0.            0.      
    3       0.          302.          303.          304.            0.      
    4       0.            0.          403.          404.          405.      
    5       0.            0.            0.          504.          505.      
    6       0.            0.            0.            0.          605.      
 
  Col:        6             7             8             9            10       
  Row
  ---
    5     506.            0.            0.            0.            0.      
    6     606.          607.            0.            0.            0.      
    7     706.          707.          708.            0.            0.      
    8       0.          807.          808.          809.            0.      
    9       0.            0.          908.          909.          910.      
   10       0.            0.            0.         1009.         1010.      
 
 
  Deleting the matrix data file "r8s3_matrix.txt".
 
TEST54
  R8SD_CG applies the conjugate gradient method
    to a symmetric positive definite linear
    system stored by diagonals.
 
  Matrix order N =      100
  Number of diagonals is        3
 
 
  First 10 rows and columns of matrix.
 
  Col:       1             2             3             4             5       
  Row
  ---
    1       4.           -1.            0.            0.            0.      
    2      -1.            4.           -1.            0.            0.      
    3       0.           -1.            4.           -1.            0.      
    4       0.            0.           -1.            4.           -1.      
    5       0.            0.            0.           -1.            4.      
    6       0.            0.            0.            0.           -1.      
    7       0.            0.            0.            0.            0.      
    8       0.            0.            0.            0.            0.      
    9       0.            0.            0.            0.            0.      
   10       0.            0.            0.            0.            0.      
 
  Col:       6             7             8             9            10       
  Row
  ---
    1       0.            0.            0.            0.            0.      
    2       0.            0.            0.            0.            0.      
    3       0.            0.            0.            0.            0.      
    4       0.            0.            0.            0.            0.      
    5      -1.            0.            0.            0.            0.      
    6       4.           -1.            0.            0.            0.      
    7      -1.            4.           -1.            0.            0.      
    8       0.           -1.            4.           -1.            0.      
    9       0.            0.           -1.            4.           -1.      
   10       0.            0.            0.           -1.            4.      
 
 
  Right hand side:
 
       1        11
       2        20
       3        30
       4        40
       5        50
       6        60
       7        70
       8        80
......  ..............
     100       231
 
  Solution:
 
       1       11.000000
       2       21.000000
       3       31.000000
       4       41.000000
       5       51.000000
       6       61.000000
       7       71.000000
       8       81.000000
......  ..............
     100      110.000000
 
  Maximum residual =   0.284217E-12
 
  Second attempt at solution:
 
       1       11.000000
       2       21.000000
       3       31.000000
       4       41.000000
       5       51.000000
       6       61.000000
       7       71.000000
       8       81.000000
......  ..............
     100       110
 
  Maximum residual of second attempt =   0.568434E-13
 
TEST55
  R8SD_CG is used for linear equation solving
    in a demonstration of inverse iteration to
    compute eigenvalues and eigenvectors of a
    symmetric matrix stored by diagonals.
 
  Matrix order N =      100
 
  Here are 25 of the smallest eigenvalues:
 
  I, J, eigenvalue(I,J):
 
       1       1  0.162028    
       1       2  0.398507    
       1       3  0.771293    
       1       4   1.25018    
       1       5   1.79638    
       2       1  0.398507    
       2       2  0.634986    
       2       3   1.00777    
       2       4   1.48666    
       2       5   2.03286    
       3       1  0.771293    
       3       2   1.00777    
       3       3   1.38056    
       3       4   1.85945    
       3       5   2.40565    
       4       1   1.25018    
       4       2   1.48666    
       4       3   1.85945    
       4       4   2.33834    
       4       5   2.88454    
       5       1   1.79638    
       5       2   2.03286    
       5       3   2.40565    
       5       4   2.88454    
       5       5   3.43074    
 
 
Lambda estimate =   0.162028    
Converged on step        7
 
 
Lambda estimate =   0.771293    
Converged on step       11
 
 
Lambda estimate =   0.398507    
Converged on step       31
 
TEST555
  R8SD_INDICATOR sets up an R8SD indicator matrix.
 
  Matrix order N =               10
  Matrix diagonals NDIAG =        3
 
  The R8SD indicator matrix:
 
  Col:       1             2             3             4             5       
  Row
  ---
    1     101.          102.            0.          104.            0.      
    2     102.          202.          203.            0.          205.      
    3       0.          203.          303.          304.            0.      
    4     104.            0.          304.          404.          405.      
    5       0.          205.            0.          405.          505.      
    6       0.            0.          306.            0.          506.      
    7       0.            0.            0.          407.            0.      
    8       0.            0.            0.            0.          508.      
    9       0.            0.            0.            0.            0.      
   10       0.            0.            0.            0.            0.      
 
  Col:       6             7             8             9            10       
  Row
  ---
    1       0.            0.            0.            0.            0.      
    2       0.            0.            0.            0.            0.      
    3     306.            0.            0.            0.            0.      
    4       0.          407.            0.            0.            0.      
    5     506.            0.          508.            0.            0.      
    6     606.          607.            0.          609.            0.      
    7     607.          707.          708.            0.          710.      
    8       0.          708.          808.          809.            0.      
    9     609.            0.          809.          909.          910.      
   10       0.          710.            0.          910.         1010.      
 
 
TEST56
  R8SM_ML computes A*x or A'*X
    where A is a Sherman Morrison matrix.
 
  Matrix rows M =           7
  Matrix columns N =        7
 
  The Sherman Morrison matrix:
 
  Col:       1             2             3             4             5       
  Row
  ---
    1  -0.523259     -0.519701      0.169118      0.505236      0.487381E-01
    2   0.900681     -0.340474E-02 -0.452836E-01  0.979281E-01  0.209060    
    3   0.190252      0.912587E-01  0.356081     -0.281754      0.248217E-01
    4   0.482296     -0.568034E-02  0.283504      0.224374      0.478787    
    5  -0.284400     -0.144488     -0.498077      0.595864      0.130874    
    6  -0.604187     -0.167760     -0.554103     -0.189652     -0.245859    
    7  -0.200361E-01  0.518989      0.623970      0.226007      0.622209    
 
  Col:       6             7       
  Row
  ---
    1   0.134385      0.602509    
    2   0.154183      0.360426    
    3   0.361971      0.200264    
    4   0.347365      0.712898    
    5  -0.251987      0.103843    
    6   0.155440      0.286048    
    7   0.193524      0.819502    
 
 
  A*x and PLU*x
 
       1     6.23320         6.23320    
       2     5.64311         5.64311    
       3     4.01178         4.01178    
       4     11.6874         11.6874    
       5    0.185197        0.185197    
       6    -1.65495        -1.65495    
       7     13.8026         13.8026    
 
  The Sherman Morrison matrix:
 
  Col:       1             2             3             4             5       
  Row
  ---
    1   0.372211      0.446500E-01  0.806618      0.931129      0.533214    
    2  -0.234486     -0.116704      0.580868      0.879274      0.123585    
    3   0.256648      0.260123      0.212966      0.507635      0.397534E-01
    4  -0.460832     -0.492993      0.751566     -0.487418E-01  0.681334E-01
    5   0.554236     -0.477249E-01  0.716446      0.448273      0.646527    
    6  -0.803782     -0.483181      0.429272      0.202573     -0.129083    
    7  -0.627499      0.738779E-01  0.840658      0.833144     -0.217538    
 
  Col:       6             7       
  Row
  ---
    1   0.577074      0.266591    
    2   0.242808      0.325956    
    3   0.473955      0.296694    
    4   0.397568     -0.274456    
    5  -0.348438E-01  0.651523    
    6   0.222917      0.143123    
    7   0.392929      0.434966    
 
 
  A'*x and (PLU)'*x
 
       1    -7.61416        -7.61416    
       2    -4.00093        -4.00093    
       3     17.6560         17.6560    
       4     13.3064         13.3064    
       5     2.10755         2.10755    
       6     7.98862         7.98862    
       7     7.87188         7.87188    
 
TEST57
  R8SM_SL implements the Sherman-Morrison method 
    for solving a perturbed linear system.
 
  Matrix rows M =           5
  Matrix columns N =        5
 
  The Sherman-Morrison matrix A:
 
  Col:       1             2             3             4             5       
  Row
  ---
    1  -0.413081     -0.446389     -0.724118     -0.412241      0.269327E-01
    2   0.877654      0.193737      0.351650      0.845924      0.737188    
    3   0.586159     -0.875398E-01  0.984781E-01  0.191185     -0.197573    
    4  -0.779730E-02 -0.418356      0.459899E-01 -0.278876     -0.742942    
    5   0.230434      0.483928      0.567228     -0.107606      0.166845E-01
 
 
  The right hand side vector B:
 
       1   4.22168    
       2  0.424679    
       3   3.29472    
       4  0.199627    
       5  -1.97976    
 
  Solution to A' * X = B:
 
       1   1.00000    
       2   2.00000    
       3   3.00000    
       4   4.00000    
       5   5.00000    
 
  The Sherman-Morrison matrix A:
 
  Col:       1             2             3             4             5       
  Row
  ---
    1   0.251659      0.319285     -0.915133E-01  0.346037E-01  0.292301    
    2  -0.183719E-01  0.214294     -0.364887      0.694459      0.889569    
    3   0.754919      0.612363      0.284029      0.877659E-01  0.763226    
    4   0.212156      0.225367      0.394769      0.763444      0.752990    
    5   0.169856      0.201542      0.788678      0.744086      0.406239    
 
 
  The right hand side vector B:
 
       1   2.21561    
       2   6.54124    
       3   6.99893    
       4   8.66593    
       5   7.94651    
 
  Solution to A * X = B:
 
       1   1.00000    
       2   2.00000    
       3   3.00000    
       4   4.00000    
       5   5.00000    
 
TEST5705
  R8SP_IJ_TO_K returns the R8SP index of (I,J).
 
  Matrix rows M =           7
  Matrix columns N =        5
  Matrix nonzeros =        10
 
         I         J         K
 
         1         1        -1
         1         2         1
         1         3        -1
         1         4        -1
         1         5         2
         2         1         3
         2         2        -1
         2         3        -1
         2         4        -1
         2         5         4
         3         1        -1
         3         2        -1
         3         3        -1
         3         4        -1
         3         5        -1
         4         1         5
         4         2         6
         4         3         7
         4         4        -1
         4         5        -1
         5         1        -1
         5         2        -1
         5         3        -1
         5         4         8
         5         5        -1
         6         1        -1
         6         2        -1
         6         3        -1
         6         4         9
         6         5        -1
         7         1        10
         7         2        -1
         7         3        -1
         7         4        -1
         7         5        -1
 
TEST571
  R8SP_INDICATOR sets up a R8SP indicator matrix;
 
  Matrix rows M =           7
  Matrix columns N =        5
  Matrix nonzeros =        10
 
  The R8SP indicator matrix:
 
  Col:        1             2             3             4             5
  Row
  ---
    1    0.00000       12.0000       0.00000       0.00000       15.0000    
    2    21.0000       0.00000       0.00000       0.00000       25.0000    
    4    41.0000       42.0000       43.0000       0.00000       0.00000    
    5    0.00000       0.00000       0.00000       54.0000       0.00000    
    6    0.00000       0.00000       0.00000       64.0000       0.00000    
    7    71.0000       0.00000       0.00000       0.00000       0.00000    
 
TEST572
  R8SP_MXV multiplies an R8SP matrix by a vector;
  R8SP_VXM multiplies a vector by an R8SP matrix;
 
  Matrix rows M =           7
  Matrix columns N =        5
  Matrix nonzeros =        10
 
  The R8SP matrix, in R8GE form:
 
  Col:        1             2             3             4             5       
  Row
  ---
    1       0.        0.218418          0.            0.        0.956318    
    2   0.829509          0.            0.            0.        0.561695    
    3       0.            0.            0.            0.            0.      
    4   0.415307      0.661187E-01  0.257578          0.            0.      
    5       0.            0.            0.        0.109957          0.      
    6       0.            0.            0.        0.438290E-01      0.      
    7   0.633966          0.            0.            0.            0.      
 
 
  The vector x:
 
       1   1.00000    
       2   0.00000    
       3   0.00000    
       4   0.00000    
       5  -1.00000    
 
  The product A * x:
 
       1 -0.956318    
       2  0.267814    
       3   0.00000    
       4  0.415307    
       5   0.00000    
       6   0.00000    
       7  0.633966    
 
  The vector x:
 
       1   1.00000    
       2   0.00000    
       3   0.00000    
       4   0.00000    
       5   0.00000    
       6   0.00000    
       7  -1.00000    
 
  The product A' * x:
 
       1 -0.633966    
       2  0.218418    
       3   0.00000    
       4   0.00000    
       5  0.956318    
 
TEST5722
  R8SP_PRINT prints a R8SP matrix;
  In this example, we have listed several matrix
  locations TWICE.  R8SP_PRINT should compute the
  sum of these values.
 
  In particular, we want A(1,2) = 112 and A(3,4) = 234.
 
  Matrix rows M =           5
  Matrix columns N =        7
  Matrix nonzeros =        12
 
  The R8SP matrix:
 
  Col:        1             2             3             4             5
  Row
  ---
    1    0.00000       112.000       0.00000       14.0000       0.00000    
    2    21.0000       0.00000       0.00000       24.0000       0.00000    
    3    0.00000       0.00000       0.00000       234.000       0.00000    
    4    0.00000       0.00000       0.00000       0.00000       45.0000    
    5    51.0000       52.0000       0.00000       0.00000       0.00000    
 
  Col:        6             7
  Row
  ---
    1    0.00000       17.0000    
    4    46.0000       0.00000    
 
TEST5724
  For a R8SP system,
  R8SP_WRITE writes the matrix to a file.
 
  Matrix rows M =               100
  Matrix columns N =            100
  Matrix nonzeros NZ_NUM =      298
 
  Initial 10x10 block of R8S3 matrix:
 
  Col:        1             2             3             4             5
  Row
  ---
    1    101.000       102.000       0.00000       0.00000       0.00000    
    2    201.000       202.000       203.000       0.00000       0.00000    
    3    0.00000       302.000       303.000       304.000       0.00000    
    4    0.00000       0.00000       403.000       404.000       405.000    
    5    0.00000       0.00000       0.00000       504.000       505.000    
    6    0.00000       0.00000       0.00000       0.00000       605.000    
 
  Col:        6             7             8             9            10
  Row
  ---
    5    506.000       0.00000       0.00000       0.00000       0.00000    
    6    606.000       607.000       0.00000       0.00000       0.00000    
    7    706.000       707.000       708.000       0.00000       0.00000    
    8    0.00000       807.000       808.000       809.000       0.00000    
    9    0.00000       0.00000       908.000       909.000       910.000    
   10    0.00000       0.00000       0.00000       1009.00       1010.00    
 
  R8SP_WRITE wrote the matrix data to "r8sp_matrix.txt".
 
TEST5725
  For a R8SP system,
  R8SP_READ_SIZE reads the size of the matrix.
  R8SP_READ reads the matrix.
 
  R8SP_READ_SIZE reports matrix size data:
 
  Matrix rows M =               100
  Matrix columns N =            100
  Matrix nonzeros NZ_NUM =      298
 
  Initial 10x10 block of recovered R8SP matrix:
 
  Col:        1             2             3             4             5
  Row
  ---
    1    101.000       102.000       0.00000       0.00000       0.00000    
    2    201.000       202.000       203.000       0.00000       0.00000    
    3    0.00000       302.000       303.000       304.000       0.00000    
    4    0.00000       0.00000       403.000       404.000       405.000    
    5    0.00000       0.00000       0.00000       504.000       505.000    
    6    0.00000       0.00000       0.00000       0.00000       605.000    
 
  Col:        6             7             8             9            10
  Row
  ---
    5    506.000       0.00000       0.00000       0.00000       0.00000    
    6    606.000       607.000       0.00000       0.00000       0.00000    
    7    706.000       707.000       708.000       0.00000       0.00000    
    8    0.00000       807.000       808.000       809.000       0.00000    
    9    0.00000       0.00000       908.000       909.000       910.000    
   10    0.00000       0.00000       0.00000       1009.00       1010.00    
 
  Deleting the matrix data file "r8sp_matrix.txt".
 
TEST573
  R8SR_INDICATOR sets up an R8SR indicator matrix;
 
  Matrix order N =        5
 
  The R8SR indicator matrix:
 
  Col:        1             2             3             4             5       
  Row
  ---
    1      11.           12.            0.            0.           15.      
    2       0.           22.            0.            0.           25.      
    3      31.            0.           33.            0.            0.      
    4      41.            0.            0.           44.            0.      
    5       0.           52.           53.            0.           55.      
 
 
TEST574
  R8SR_MXV multiplies an R8SR matrix by a vector;
  R8SR_VXM multiplies a vector by an R8SR matrix;
 
  Matrix order N =        5
 
  The R8SR matrix, in R8GE form:
 
  Col:        1             2             3             4             5       
  Row
  ---
    1   0.218418      0.956318          0.            0.        0.829509    
    2       0.        0.561695          0.            0.        0.415307    
    3   0.257578          0.        0.661187E-01      0.            0.      
    4   0.438290E-01      0.            0.        0.109957          0.      
    5       0.        0.617272E-01  0.449539          0.        0.633966    
 
 
  The vector x:
 
       1   1.00000    
       2   0.00000    
       3   0.00000    
       4   0.00000    
       5  -1.00000    
 
  The product A * x:
 
       1 -0.611091    
       2 -0.415307    
       3  0.257578    
       4  0.438290E-01
       5 -0.633966    
 
  The product A' * x:
 
       1  0.218418    
       2  0.894590    
       3 -0.449539    
       4   0.00000    
       5  0.195544    
 
TEST5745
  R8SR_PRINT prints an R8SR matrix.
 
  Matrix order N =        5
 
  The R8SR matrix:
 
  Col:        1             2             3             4             5       
  Row
  ---
    1   0.218418      0.956318          0.            0.        0.829509    
    2       0.        0.561695          0.            0.        0.415307    
    3   0.257578          0.        0.661187E-01      0.            0.      
    4   0.438290E-01      0.            0.        0.109957          0.      
    5       0.        0.617272E-01  0.449539          0.        0.633966    
 
 
TEST575
  R8SR_RANDOM randomizes an R8SR matrix
 
  Matrix order N =        5
 
  The R8SR matrix, in R8GE form:
 
  Col:        1             2             3             4             5       
  Row
  ---
    1   0.218418      0.956318          0.            0.        0.829509    
    2       0.        0.561695          0.            0.        0.415307    
    3   0.257578          0.        0.661187E-01      0.            0.      
    4   0.438290E-01      0.            0.        0.109957          0.      
    5       0.        0.617272E-01  0.449539          0.        0.633966    
 
 
TEST577
  For a symmetric skyline storage matrix,
  R8SS_INDICATOR computes an indicator matrix.
 
  Matrix order N =        9
 
  The R8SS indicator matrix:
 
  Col:       1             2             3             4             5       
  Row
  ---
    1      11.           12.           13.           14.           15.      
    2      12.           22.           23.           24.           25.      
    3      13.           23.           33.           34.           35.      
    4      14.           24.           34.           44.           45.      
    5      15.           25.           35.           45.           55.      
    6      16.           26.           36.           46.           56.      
    7      17.           27.           37.           47.           57.      
    8      18.           28.           38.           48.           58.      
    9      19.           29.           39.           49.           59.      
 
  Col:       6             7             8             9       
  Row
  ---
    1      16.           17.           18.           19.      
    2      26.           27.           28.           29.      
    3      36.           37.           38.           39.      
    4      46.           47.           48.           49.      
    5      56.           57.           58.           59.      
    6      66.           67.           68.           69.      
    7      67.           77.           78.           79.      
    8      68.           78.           88.           89.      
    9      69.           79.           89.           99.      
 
 
TEST58
  For a symmetric skyline storage matrix,
  R8SS_MXV computes A*x,
  R8SS_PRINT prints it.
 
  Matrix order N =        9
 
  Number of nonzero entries stored is       20
 
  Diagonal storage indices:
 
       1       1
       2       2
       3       5
       4       9
       5      12
       6      15
       7      16
       8      19
       9      20
 
  The R8SS matrix:
 
  Col:       1             2             3             4             5       
  Row
  ---
    1      11.            0.           13.           14.            0.      
    2       0.           22.           23.           24.            0.      
    3      13.           23.           33.           34.           35.      
    4      14.           24.           34.           44.           45.      
    5       0.            0.           35.           45.           55.      
    6       0.            0.            0.           46.           56.      
    7       0.            0.            0.            0.            0.      
    8       0.            0.            0.            0.            0.      
    9       0.            0.            0.            0.            0.      
 
  Col:       6             7             8             9       
  Row
  ---
    1       0.            0.            0.            0.      
    2       0.            0.            0.            0.      
    3       0.            0.            0.            0.      
    4      46.            0.            0.            0.      
    5      56.            0.            0.            0.      
    6      66.            0.           68.            0.      
    7       0.           77.           78.            0.      
    8      68.           78.           88.            0.      
    9       0.            0.            0.           99.      
 
 
  R8SS_MXV verse R8GE_MXV
 
       1     106.000         106.000    
       2     209.000         209.000    
       3     469.000         469.000    
       4     841.000         841.000    
       5     896.000         896.000    
       6     1404.00         1404.00    
       7     1163.00         1163.00    
       8     1658.00         1658.00    
       9     891.000         891.000    
 
TEST581
  R8STO_INDICATOR sets up an R8STO indicator matrix.
 
  Matrix order N =        4
 
  The R8STO indicator matrix:
 
  Col:       1             2             3             4       
  Row
  ---
    1      11.           12.           13.           14.      
    2      12.           11.           12.           13.      
    3      13.           12.           11.           12.      
    4      14.           13.           12.           11.      
 
 
TEST583
  R8STO_INVERSE computes the inverse of a positive
  definite symmetric Toeplitz matrix.
 
  Matrix order N =        3
 
  The symmetric Toeplitz matrix A:
 
  Col:       1             2             3       
  Row
  ---
    1       4.            2.        0.800000    
    2       2.            4.            2.      
    3   0.800000          2.            4.      
 
 
  The inverse matrix B:
 
  Col:        1             2             3       
  Row
  ---
    1   0.334821     -0.178571      0.223214E-01
    2  -0.178571      0.428571     -0.178571    
    3   0.223214E-01 -0.178571      0.334821    
 
 
  The product C = A * B:
 
  Col:        1             2             3       
  Row
  ---
    1       1.        0.364788E-16 -0.733540E-17
    2   0.416334E-16      1.            0.      
    3   0.277556E-16      0.            1.      
 
 
TEST585
  R8STO_YW_SL solves the Yule-Walker equations for a
  symmetric Toeplitz system.
 
  Matrix order N =        3
 
  The symmetric Toeplitz matrix:
 
  Col:       1             2             3       
  Row
  ---
    1       1.        0.500000      0.200000    
    2   0.500000          1.        0.500000    
    3   0.200000      0.500000          1.      
 
 
  The right hand side, B:
 
       1 -0.500000    
       2 -0.200000    
       3 -0.100000    
 
  The computed solution, X:
 
       1 -0.535714    
       2  0.857143E-01
       3 -0.357143E-01
 
  The product A*X:
 
       1 -0.500000    
       2 -0.200000    
       3 -0.100000    
 
TEST587
  R8STO_SL solves a positive definite symmetric 
    Toeplitz system.
 
  Matrix order N =        3
 
  The symmetric Toeplitz matrix A:
 
  Col:       1             2             3       
  Row
  ---
    1       1.        0.500000      0.200000    
    2   0.500000          1.        0.500000    
    3   0.200000      0.500000          1.      
 
 
  The right hand side vector B:
 
       1   4.00000    
       2  -1.00000    
       3   3.00000    
 
  The solution X:
 
       1   6.33929    
       2  -6.71429    
       3   5.08929    
 
  The product vector  B = A * X:
 
       1   4.00000    
       2  -1.00000    
       3   3.00000    
 
TEST589
  R8TO_INDICATOR sets up an R8TO indicator matrix.
 
  Matrix order N =       10
 
  The R8TO indicator matrix:
 
  Col:       1             2             3             4             5       
  Row
  ---
    1     101.          102.          103.          104.          105.      
    2     201.          101.          102.          103.          104.      
    3     301.          201.          101.          102.          103.      
    4     401.          301.          201.          101.          102.      
    5     501.          401.          301.          201.          101.      
    6     601.          501.          401.          301.          201.      
    7     701.          601.          501.          401.          301.      
    8     801.          701.          601.          501.          401.      
    9     901.          801.          701.          601.          501.      
   10    1001.          901.          801.          701.          601.      
 
  Col:       6             7             8             9            10       
  Row
  ---
    1     106.          107.          108.          109.          110.      
    2     105.          106.          107.          108.          109.      
    3     104.          105.          106.          107.          108.      
    4     103.          104.          105.          106.          107.      
    5     102.          103.          104.          105.          106.      
    6     101.          102.          103.          104.          105.      
    7     201.          101.          102.          103.          104.      
    8     301.          201.          101.          102.          103.      
    9     401.          301.          201.          101.          102.      
   10     501.          401.          301.          201.          101.      
 
 
TEST59
  R8TO_SL solves a Toeplitz system.
 
  Matrix order N =       10
 
  The Toeplitz matrix:
 
  Col:       1             2             3             4             5       
  Row
  ---
    1   0.218418      0.956318      0.829509      0.561695      0.415307    
    2   0.617272E-01  0.218418      0.956318      0.829509      0.561695    
    3   0.449539      0.617272E-01  0.218418      0.956318      0.829509    
    4   0.401306      0.449539      0.617272E-01  0.218418      0.956318    
    5   0.754673      0.401306      0.449539      0.617272E-01  0.218418    
    6   0.797287      0.754673      0.401306      0.449539      0.617272E-01
    7   0.183837E-02  0.797287      0.754673      0.401306      0.449539    
    8   0.897504      0.183837E-02  0.797287      0.754673      0.401306    
    9   0.350752      0.897504      0.183837E-02  0.797287      0.754673    
   10   0.945448E-01  0.350752      0.897504      0.183837E-02  0.797287    
 
  Col:       6             7             8             9            10       
  Row
  ---
    1   0.661187E-01  0.257578      0.109957      0.438290E-01  0.633966    
    2   0.415307      0.661187E-01  0.257578      0.109957      0.438290E-01
    3   0.561695      0.415307      0.661187E-01  0.257578      0.109957    
    4   0.829509      0.561695      0.415307      0.661187E-01  0.257578    
    5   0.956318      0.829509      0.561695      0.415307      0.661187E-01
    6   0.218418      0.956318      0.829509      0.561695      0.415307    
    7   0.617272E-01  0.218418      0.956318      0.829509      0.561695    
    8   0.449539      0.617272E-01  0.218418      0.956318      0.829509    
    9   0.401306      0.449539      0.617272E-01  0.218418      0.956318    
   10   0.754673      0.401306      0.449539      0.617272E-01  0.218418    
 
 
  Solution:
 
       1        1.000000
       2        2.000000
       3        3.000000
       4        4.000000
       5        5.000000
       6        6.000000
       7        7.000000
       8        8.000000
       9        9.000000
      10       10.000000
 
  Solution to transposed system:
 
       1        1.000000
       2        2.000000
       3        3.000000
       4        4.000000
       5        5.000000
       6        6.000000
       7        7.000000
       8        8.000000
       9        9.000000
      10       10.000000
 
TEST60
  For an upper triangular matrix,
  R8UT_DET computes the determinant.
  R8UT_INVERSE computes the inverse.
  R8UT_MXM computes matrix products.
 
  Matrix order N =        5
 
  The matrix A:
 
  Col:       1             2             3             4             5       
  Row
  ---
    1   0.218418      0.956318      0.829509      0.561695      0.415307    
    2                 0.661187E-01  0.257578      0.109957      0.438290E-01
    3                               0.633966      0.617272E-01  0.449539    
    4                                             0.401306      0.754673    
    5                                                           0.797287    
 
 
  Determinant is   0.292934E-02
 
  The inverse matrix B:
 
  Col:       1             2             3             4             5       
  Row
  ---
    1    4.57837      -66.2199       20.9143       8.51892      -18.6004    
    2                  15.1243      -6.14495      -3.19883       5.66117    
    3                                1.57737     -0.242625     -0.659722    
    4                                              2.49186      -2.35868    
    5                                                            1.25425    
 
 
  The product A * B:
 
  Col:       1             2             3             4             5       
  Row
  ---
    1       1.       -0.177636E-14  0.222045E-15  0.222045E-15  0.888178E-15
    2                     1.            0.            0.        0.485723E-16
    3                                   1.            0.            0.      
    4                                                 1.        0.111022E-15
    5                                                               1.      
 
 
TEST605
  For an upper triangular matrix,
  R8UT_INDICATOR sets up an indicator matrix.
 
  Matrix rows M =           8
  Matrix columns N =        5
 
  The R8UT indicator matrix:
 
  Col:       1             2             3             4             5       
  Row
  ---
    1      11.           12.           13.           14.           15.      
    2                    22.           23.           24.           25.      
    3                                  33.           34.           35.      
    4                                                44.           45.      
    5                                                              55.      
 
 
TEST61
  For an upper triangular matrix,
  R8UT_SL solves systems;
  R8UT_MXV computes matrix-vector products.
  R8UT_VXM computes vector-matrix products.
 
  Matrix order N =       10
 
  The upper triangular matrix:
 
  Col:       1             2             3             4             5       
  Row
  ---
    1       1.            2.            3.            4.            5.      
    2                     2.            3.            4.            5.      
    3                                   3.            4.            5.      
    4                                                 4.            5.      
    5                                                               5.      
 
  Col:       6             7             8             9            10       
  Row
  ---
    1       6.            7.            8.            9.           10.      
    2       6.            7.            8.            9.           10.      
    3       6.            7.            8.            9.           10.      
    4       6.            7.            8.            9.           10.      
    5       6.            7.            8.            9.           10.      
    6       6.            7.            8.            9.           10.      
    7                     7.            8.            9.           10.      
    8                                   8.            9.           10.      
    9                                                 9.           10.      
   10                                                              10.      
 
 
  Solution:
 
       1   1.00000    
       2   2.00000    
       3   3.00000    
       4   4.00000    
       5   5.00000    
       6   6.00000    
       7   7.00000    
       8   8.00000    
       9   9.00000    
      10   10.0000    
 
  Solution to transposed system:
 
       1   1.00000    
       2   2.00000    
       3   3.00000    
       4   4.00000    
       5   5.00000    
       6   6.00000    
       7   7.00000    
       8   8.00000    
       9   9.00000    
      10   10.0000    
 
TEST62
  R8VM_DET, determinant of a Vandermonde matrix.
 
  Matrix order N =       10
 
  The Vandermonde matrix:
 
  Col:       1             2             3             4             5       
  Row
  ---
    1       1.            1.            1.            1.            1.      
    2   0.218418      0.956318      0.829509      0.561695      0.415307    
    3   0.477066E-01  0.914543      0.688086      0.315502      0.172480    
    4   0.104200E-01  0.874594      0.570773      0.177216      0.716322E-01
    5   0.227592E-02  0.836389      0.473462      0.995414E-01  0.297493E-01
    6   0.497102E-03  0.799854      0.392741      0.559119E-01  0.123551E-01
    7   0.108576E-03  0.764914      0.325782      0.314055E-01  0.513117E-02
    8   0.237150E-04  0.731501      0.270239      0.176403E-01  0.213101E-02
    9   0.517979E-05  0.699547      0.224166      0.990848E-02  0.885023E-03
   10   0.113136E-05  0.668989      0.185948      0.556555E-02  0.367556E-03
 
  Col:       6             7             8             9            10       
  Row
  ---
    1       1.            1.            1.            1.            1.      
    2   0.661187E-01  0.257578      0.109957      0.438290E-01  0.633966    
    3   0.437169E-02  0.663463E-01  0.120905E-01  0.192098E-02  0.401913    
    4   0.289050E-03  0.170893E-01  0.132943E-02  0.841947E-04  0.254799    
    5   0.191116E-04  0.440183E-02  0.146180E-03  0.369017E-05  0.161534    
    6   0.126364E-05  0.113381E-02  0.160735E-04  0.161736E-06  0.102407    
    7   0.835501E-07  0.292045E-03  0.176739E-05  0.708874E-08  0.649224E-01
    8   0.552423E-08  0.752244E-04  0.194337E-06  0.310693E-09  0.411586E-01
    9   0.365255E-09  0.193761E-04  0.213686E-07  0.136173E-10  0.260931E-01
   10   0.241502E-10  0.499086E-05  0.234963E-08  0.596834E-12  0.165421E-01
 
 
  R8VM_DET computes the determinant =  -0.422063E-24
  R8GE_DET computes the determinant =  -0.422063E-24
 
TEST63
  R8VM_SL solves a Vandermonde system.
 
  Matrix order N =        5
 
  Solution:
 
       1        1.000000
       2        2.000000
       3        3.000000
       4        4.000000
       5        5.000000
 
  Solution to transposed system:
 
       1        1.000000
       2        2.000000
       3        3.000000
       4        4.000000
       5        5.000000
 
LINPLUS_PRB
  Normal end of execution.
 
23 June 2009   4:55:11.726 PM
